[{"/Users/aaronkang/Desktop/Clubview/client/src/index.js":"1","/Users/aaronkang/Desktop/Clubview/client/src/components/App.js":"2","/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome.jsx":"3","/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx":"4","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx":"5","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx":"6","/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx":"7","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx":"8","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx":"9","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx":"10","/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx":"11","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx":"12","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx":"13","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx":"14","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx":"15","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx":"16","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx":"17","/Users/aaronkang/Desktop/Clubview/client/src/components/Filter/Filter.jsx":"18"},{"size":164,"mtime":1622346534281,"results":"19","hashOfConfig":"20"},{"size":1577,"mtime":1624252856267,"results":"21","hashOfConfig":"20"},{"size":557,"mtime":1622346534281,"results":"22","hashOfConfig":"20"},{"size":1256,"mtime":1622420134508,"results":"23","hashOfConfig":"20"},{"size":2714,"mtime":1624355338911,"results":"24","hashOfConfig":"20"},{"size":931,"mtime":1623844565537,"results":"25","hashOfConfig":"20"},{"size":1964,"mtime":1624352828795,"results":"26","hashOfConfig":"20"},{"size":7288,"mtime":1623835206851,"results":"27","hashOfConfig":"20"},{"size":3553,"mtime":1624418902327,"results":"28","hashOfConfig":"20"},{"size":138,"mtime":1623833010911,"results":"29","hashOfConfig":"20"},{"size":595,"mtime":1622717558232,"results":"30","hashOfConfig":"20"},{"size":679,"mtime":1623895183398,"results":"31","hashOfConfig":"20"},{"size":645,"mtime":1623837281469,"results":"32","hashOfConfig":"20"},{"size":1947,"mtime":1624337252616,"results":"33","hashOfConfig":"20"},{"size":605,"mtime":1624220427759,"results":"34","hashOfConfig":"20"},{"size":116,"mtime":1624253686728,"results":"35","hashOfConfig":"20"},{"size":2067,"mtime":1624430470908,"results":"36","hashOfConfig":"20"},{"size":269,"mtime":1624143065642,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"zxns19",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"40"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/aaronkang/Desktop/Clubview/client/src/index.js",[],["83","84"],"/Users/aaronkang/Desktop/Clubview/client/src/components/App.js",["85","86"],"import React, { useState, useEffect } from \"react\";\nimport Welcome from \"../components/Welcome\";\nimport Header from \"../components/Header/Header\";\nimport Dashboard from \"../components/Dashboard/Dashboard\";\nimport Profile from \"../components/Profile/Profile\";\nimport AddArea from \"../components/AddArea/AddArea\";\nimport Clubinfo from \"../components/Clubinfo/Clubinfo\";\nimport { UserContext, AuthContext } from \"../context/user\";\nimport \"../styles/Styles.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Club from \"./Club/Club\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isSignedIn, setSignedIn] = useState(false);\n\n  return (\n    <div>\n      <div className=\"container-fluid\">\n        <AuthContext.Provider value={{ isSignedIn, setSignedIn }}>\n          <UserContext.Provider value={{ user, setUser }}>\n            <Router>\n              <Header />\n              <Switch>\n                <Route path=\"/clubs\" exact component={Dashboard} />\n                <Route path=\"/profile\" component={Profile} />\n                <Route path=\"/clubs/add\" exact>\n                  <AddArea isEdit={false} />\n                </Route>\n                <Route path=\"/edit\">\n                  <AddArea isEdit={true} />\n                </Route>\n                <Route path=\"/clubs/\" component={Clubinfo} />\n                <Route path=\"/\" exact component={Welcome} />\n              </Switch>\n            </Router>\n          </UserContext.Provider>\n        </AuthContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx",["87"],"import React, { useState, useEffect, useContext } from \"react\";\nimport Club from \"../Club/Club\";\nimport axios from \"axios\";\nimport \"./Dashboard.css\";\nimport Filter from \"../Filter/Filter\";\nimport { AuthContext, UserContext } from \"../../context/user\";\n\nfunction Dashboard() {\n  const [searchTerm, setSearch] = useState(\"\");\n  const [clubs, setClubs] = useState([]);\n  const [favclubs, setFavClubs] = useState([]);\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n\n  const fetchClubsData = async () => {\n    await axios\n      .get(\"https://clubview-server.herokuapp.com/clubs\")\n      .then((res) => setClubs(res.data))\n      .catch((err) => console.log(err));\n  };\n\n  const fetchFavsData = () => {\n    if (isSignedIn) {\n      axios\n        .get(\"http://localhost:5000/profile//favsID/\" + user.email)\n        .then((res) => setFavClubs(res.data));\n    }\n  };\n\n  useEffect(() => {\n    fetchFavsData();\n    fetchClubsData();\n    console.log(\"user in dashboard is \", user);\n  }, [user]);\n\n  function handleChange(event) {\n    const val = event.target.value;\n    setSearch(val);\n    console.log(searchTerm);\n  }\n\n  function handleSearch(event) {\n    console.log(searchTerm);\n    const sTerm = searchTerm.toLowerCase();\n    const c = clubs.find((club) => String(club.cname).toLowerCase() === sTerm);\n\n    if (c === undefined) {\n      alert(\"Club not found\");\n      setSearch(\"\");\n    } else {\n      window.location.href = \"/clubs/\" + c._id;\n    }\n  }\n\n  function findIsFav(clubItem) {\n    return favclubs.includes(clubItem._id);\n  }\n\n  function clubList() {\n    return clubs.map((clubItem) => {\n      return (\n        <Club\n          key={clubItem._id}\n          id={clubItem._id}\n          cname={clubItem.cname}\n          lead={clubItem.lead}\n          email={clubItem.email}\n          category={clubItem.category}\n          desc={clubItem.desc}\n          site={clubItem.site}\n          emoji={clubItem.emoji}\n          isFav={findIsFav(clubItem)}\n          recruit={{ start: clubItem.start, end: clubItem.end }}\n        />\n      );\n    });\n  }\n\n  return (\n    <div>\n      <form className=\"form-inline\" style={{ padding: \"1%\" }}>\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"text\"\n          value={searchTerm}\n          onChange={handleChange}\n          placeholder=\"Search Club\"\n          aria-label=\"Search\"\n        />\n        <button\n          type=\"button\"\n          onClick={handleSearch}\n          className=\"btn btn-outline-danger my-2 my-sm-0\"\n        >\n          Search\n        </button>\n        <Filter className=\"mr-0\" />\n      </form>\n      <div className=\"dashboard\"> {clubList()}</div>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx",["88","89","90"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Login from \"../GoogleAuth/Login\";\nimport \"./Header.css\";\nimport { AuthContext, UserContext } from \"../../context/user\";\n\nfunction Header() {\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n\n  const [profile, setProfile] = useState(\"\");\n\n  useEffect(() => {\n    if (user && isSignedIn) {\n      setProfile(user.imageUrl);\n    }\n  }, [user]);\n\n  return (\n    <nav className=\"navbar sticky-top navbar-expand-lg navbar-light\">\n      <Link className=\"navbar-brand\" to=\"/clubs\">\n        Club View\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link active\" to=\"/clubs\">\n              Clubs\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/clubs/add\">\n              <Fab variant=\"extended\" size=\"large\">\n                <AddIcon />\n                Add Club\n              </Fab>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/profile/settings\">\n              <Fab size=\"medium\">\n                {isSignedIn ? (\n                  <img className=\"profile-picture\" src={profile}></img>\n                ) : (\n                  <AccountCircleIcon />\n                )}\n              </Fab>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx",["91","92","93"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./AddArea.css\";\n\nfunction AddArea(props) {\n  const isEdit = props.isEdit;\n  const currentURL_string = window.location.href;\n  const id = currentURL_string.substring(\n    currentURL_string.lastIndexOf(\"/\") + 1\n  );\n\n  const [club, setClub] = useState({\n    cname: \"\",\n    lead: \"\",\n    email: \"\",\n    category: \"                        \",\n    desc: \"\",\n    site: \"\",\n    start: \"\",\n    end: \"\",\n    emoji: \"💡\",\n  });\n\n  useEffect(() => {\n    if (props.isEdit === true) {\n      getClubInfo();\n      console.log(club);\n    }\n  }, []);\n\n  function getClubInfo() {\n    axios\n      .get(\"https://clubview-server.herokuapp.com/clubs/\" + id)\n      .then((res) => setClub(res.data))\n      .catch((err) => console.log(err));\n  }\n\n  function handleChange(event) {\n    let { name, value } = event.target;\n    setClub((prevClub) => {\n      console.log(prevClub);\n      return {\n        ...prevClub,\n        [name]: value,\n      };\n    });\n  }\n\n  function stillEmpty() {\n    return (\n      club.cname === \"\" ||\n      club.lead === \"\" ||\n      club.email === \"\" ||\n      club.category === \"                        \" ||\n      club.desc === \"\" ||\n      club.start === \"\" ||\n      club.end === \"\"\n    );\n  }\n\n  function submitClub(event) {\n    if (stillEmpty()) {\n      alert(\"Please fill in all required sections\");\n      event.preventDefault();\n    } else {\n      if (props.isEdit == false) {\n        alert(\"Club Add successful.\");\n        axios\n          .post(\"https://clubview-server.herokuapp.com/clubs/add\", club)\n          .then((res) => console.log(res.data))\n          .catch((err) => console.log(err));\n      } else {\n        alert(\"Club Infomration Updated!!!!! \");\n        axios\n          .post(\n            \"https://clubview-server.herokuapp.com/clubs/update/\" + id,\n            club\n          )\n          .then((res) => console.log(res.data))\n          .catch((err) => console.log(err));\n      }\n    }\n    event.preventDefault();\n  }\n\n  return (\n    <section>\n      <form className=\"needs-validation\" noValidate>\n        <div className=\"row add-Area\">\n          <div className=\"container-fluid-add col-lg-5 col-md-12\">\n            <h4>Choose an emoji!</h4>\n            <p>that best represents your club</p>\n            <div className=\"content\">{club.emoji}</div>\n            <input\n              name=\"emoji\"\n              type=\"text\"\n              className=\"input-styling form-control mx-auto\"\n              onChange={handleChange}\n              value={club.emoji}\n              maxLength=\"3\"\n              required\n            />\n          </div>\n\n          <div className=\"container-fluid-add col-lg-7 col-md-12\">\n            <h4>Club Information</h4>\n\n            <div className=\"form-group row\">\n              <label for=\"cName_\">Club Name*</label>\n              <input\n                name=\"cname\"\n                type=\"text\"\n                className=\"form-control\"\n                id=\"cName_\"\n                onChange={handleChange}\n                value={club.cname}\n                required\n              />\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"cLead\">Club Lead Name(s)*</label>\n              <input\n                name=\"lead\"\n                type=\"text\"\n                className=\"form-control\"\n                id=\"cLead\"\n                onChange={handleChange}\n                value={club.lead}\n                required\n              />\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"email\">Club Lead e-mail*</label>\n              <div className=\"input-group\">\n                <input\n                  name=\"email\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  onChange={handleChange}\n                  aria-describedby=\"emailHelp\"\n                  value={club.email}\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"category\">Club Category*</label>\n              <select\n                name=\"category\"\n                className=\"form-control\"\n                id=\"category\"\n                onChange={handleChange}\n                value={club.category}\n                required\n              >\n                <option> </option>\n                <option>Academic and Educational</option>\n                <option>Community service</option>\n                <option>Media and Publication</option>\n                <option>Political or multicultural</option>\n                <option>Recreation and sports</option>\n                <option>Religious and spiritual</option>\n                <option>Student government</option>\n              </select>\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"clubDesc\">Description of the Club*</label>\n              <textarea\n                className=\"form-control\"\n                name=\"desc\"\n                id=\"clubDesc\"\n                rows=\"3\"\n                onChange={handleChange}\n                value={club.desc}\n                required\n              ></textarea>\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"clubSite\">Website/Social Media Link</label>\n              <input\n                name=\"site\"\n                type=\"url\"\n                className=\"form-control\"\n                id=\"clubSite\"\n                onChange={handleChange}\n                value={club.site}\n                required\n              />\n            </div>\n\n            <div className=\"row\">\n              <label for=\"RecruitmentPeriod\">Recruitment Period*</label>\n              <div id=\"RecruitmentPeriod\">\n                <div className=\"row\">\n                  <div className=\"form-group col\">\n                    <div className=\"col-10\">\n                      <input\n                        name=\"start\"\n                        className=\"form-control\"\n                        type=\"datetime-local\"\n                        id=\"startDate\"\n                        onChange={handleChange}\n                        value={club.start}\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group col\">\n                    <div className=\"col-10\">\n                      <input\n                        name=\"end\"\n                        className=\"form-control\"\n                        type=\"datetime-local\"\n                        placeholder=\"End Date\"\n                        id=\"startDate\"\n                        onChange={handleChange}\n                        value={club.end}\n                        required\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              onClick={submitClub}\n              className=\"btn btn-primary\"\n              style={{ textAlign: \"right\" }}\n            >\n              {props.isEdit ? \"Update\" : \"Submit\"}\n            </button>\n          </div>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default AddArea;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx",["94","95","96","97"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { AuthContext, UserContext } from \"../../context/user\";\nimport \"./Club.css\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nfunction Club(props) {\n  const infoLinkRoute = \"clubs/\" + props.id;\n  const editLinkRoute = \"edit/\" + props.id;\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n  const [status, setStatus] = useState({ message: \"\", color: \"gray\" });\n  const [isFav, setFav] = useState(props.isFav);\n\n  const nowMom = moment(new Date());\n  const startMom = moment(props.recruit.start);\n  const endMom = moment(props.recruit.end);\n\n  const statusInd = {\n    height: \"17px\",\n    width: \"17px\",\n    backgroundColor: props.recruit[1],\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n    float: \"left\",\n    zIndex: \"2\",\n  };\n\n  useEffect(() => {\n    renderTag();\n  }, [isFav]);\n\n  const handleFavClick = () => {\n    const notisFav = !isFav;\n    const clubid = props.id;\n    axios\n      .post(\"http://localhost:5000/profile/\" + user.email + \"/editfav\", {\n        notisFav,\n        clubid,\n      })\n      .then((res) => console.log(res.data));\n    setFav(!isFav);\n  };\n\n  function renderTag() {\n    const diff = startMom.diff(nowMom, \"days\");\n    if (diff < 10 && diff > 0) {\n      setStatus({ color: \"#FFF1BC\", message: \"INCOMING\" });\n    } else if (nowMom.isBetween(startMom, endMom, undefined, \"[]\")) {\n      setStatus({ color: \"#D4FFD2\", message: \"OPEN\" });\n    } else {\n      setStatus({ color: \"#FFBEAA\", message: \"CLOSED\" });\n    }\n  }\n\n  function renderDate() {\n    return startMom.format(\"MM/DD\") + \" - \" + endMom.format(\"MM/DD\");\n  }\n\n  return (\n    <>\n      <div className=\"card mb-4\">\n        <div className=\"fav-icon-container\">\n          <Fab\n            className=\"fav-icon\"\n            onClick={handleFavClick}\n            aria-label=\"favorite\"\n            disabled={!isSignedIn}\n            size=\"small\"\n          >\n            {isFav ? (\n              <FavoriteIcon className=\"fav-icon-heart\" fontSize=\"small\" />\n            ) : (\n              <FavoriteBorderIcon className=\"fav-icon-heart\" fontSize=\"small\" />\n            )}\n          </Fab>\n        </div>\n        <Link to={infoLinkRoute}>\n          <div className=\"card-img-container\">\n            <img\n              className=\"card-img-top\"\n              src=\"./images/smallLong.png\"\n              alt=\"Card image cap\"\n            />\n            <p className=\"card-text\">{props.emoji}</p>\n          </div>\n        </Link>\n        <div className=\"card-body\">\n          <div className=\"d-flex\">\n            <Link to={infoLinkRoute}>\n              <p style={{ color: \"black\" }} className=\"clubName\">\n                {props.cname}\n              </p>\n            </Link>\n            <div className=\"ml-auto status-container\">\n              <Chip\n                label={status.message}\n                style={{ backgroundColor: status.color }}\n              />\n              {/* <span\n                className=\"status\"\n                style={{ backgroundColor: status.color }}\n              >\n                {status.message}\n              </span> */}\n            </div>\n          </div>\n          <p className=\"recDate\">{renderDate()}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Club;\n","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx",[],["98","99"],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx",["100","101"],"import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { refreshTokenSetup } from \"../../utils/refreshToken\";\nimport { AuthContext, UserContext } from \"../../context/user\";\nimport { GoogleLogin, GoogleButton } from \"react-google-login\";\n\nconst clientID = process.env.CLIENT_ID;\n\nfunction Login() {\n  const { user, setUser } = useContext(UserContext);\n  const [rawData, setRawData] = useState(null);\n  const { isSignedIn, setSignedIn } = useContext(AuthContext);\n\n  //TO-DO:\n  //make user have imageURL and seperate from raw data so that\n  // that we can get rid of null pointer exceptions\n\n  useEffect(() => {\n    console.log(\"USER IS NOW: \", user);\n    console.log(\"RAW DATA IS: \", rawData);\n    console.log(\"ISSIGNEDIN is: \", isSignedIn);\n  }, [user, rawData, isSignedIn]);\n\n  useEffect(() => {\n    console.log(\"IS IN isSignedIn USEEFFECT\");\n    console.log(\"ISSIGNEDIN is: \", isSignedIn);\n    console.log(\"RAWDATA is: \", rawData);\n    if (isSignedIn && rawData != null) {\n      console.log(\"in if\");\n      console.log(\"Raw data is: \", rawData);\n      console.log(\"raw data is\", rawData);\n      axios\n        .post(\"http://localhost:5000/profile/user\", rawData)\n        .then((res) => setUser(res.data))\n        .catch((err) => console.log(err));\n    }\n    //when logging out\n    else {\n      console.log(\"logging out\", user);\n    }\n  }, [isSignedIn]);\n\n  const onSuccess = (res) => {\n    console.log(\"login success!!!\");\n    setRawData(res.profileObj);\n    setSignedIn(true);\n    refreshTokenSetup(res);\n  };\n\n  const onFailure = (res) => {\n    console.log(\"Login failed\", res);\n  };\n\n  return (\n    <div>\n      <GoogleLogin\n        clientId={clientID}\n        accessType=\"offline\"\n        buttonText=\"Login with Google\"\n        onSuccess={onSuccess}\n        onFailure={onFailure}\n        cookiePolicy={\"single_host_origin\"}\n        isSignedIn={true}\n      />\n    </div>\n  );\n}\n\nexport default Login;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx",["102"],"import axios from \"axios\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext, UserContext } from \"../../../context/user\";\nimport Fab from \"@material-ui/core/Fab\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport moment from \"moment\";\n\nfunction Favs() {\n  const [favs, setFavs] = useState([]);\n  const { isSignedIn } = useContext(AuthContext);\n  const { user } = useContext(UserContext);\n\n  //TO-DO:\n  //Find out why database is giving empty arry for fav array\n\n  const fetchFavData = async () => {\n    if (isSignedIn) {\n      await axios\n        .get(\"http://localhost:5000/profile/favsFull/\" + user.email)\n        .then((res) => setFavs(res.data))\n        .then(() => console.log(\"fetched favs\"));\n    }\n  };\n  useEffect(() => {\n    fetchFavData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"favs is now\", favs);\n  }, [favs]);\n\n  function renderFavs() {\n    const data = Array.from(favs);\n    if (data.length === 0) {\n      return <div>You have no clubs</div>;\n    } else {\n      return (\n        <table className=\"table table-striped\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Rec. Start</th>\n              <th scope=\"col\">Rec. End</th>\n              <th scope=\"col\">Category</th>\n              <th scope=\"col\">Notifications</th>\n            </tr>\n          </thead>\n          <tbody>\n            {data.map(({ cname, start, end, category }) => {\n              return (\n                <tr>\n                  <td>{cname}</td>\n                  <td>{category}</td>\n                  <td>{moment(start).format(\"MM/DD/YYYY\")}</td>\n                  <td>{moment(end).format(\"MM/DD/YYYY\")}</td>\n                  <td>\n                    <Fab className=\"sizeSmall\">\n                      <NotificationsIcon fontSize=\"small\" />\n                    </Fab>\n                  </td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </table>\n      );\n    }\n  }\n\n  return <>{renderFavs()}</>;\n}\n\nexport default Favs;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Filter/Filter.jsx",[],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"111","line":11,"column":8,"nodeType":"109","messageId":"110","endLine":11,"endColumn":12},{"ruleId":"112","severity":1,"message":"113","line":34,"column":6,"nodeType":"114","endLine":34,"endColumn":12,"suggestions":"115"},{"ruleId":"107","severity":1,"message":"116","line":6,"column":8,"nodeType":"109","messageId":"110","endLine":6,"endColumn":13},{"ruleId":"112","severity":1,"message":"117","line":20,"column":6,"nodeType":"114","endLine":20,"endColumn":12,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":55,"column":19,"nodeType":"121","endLine":55,"endColumn":66},{"ruleId":"107","severity":1,"message":"122","line":6,"column":9,"nodeType":"109","messageId":"110","endLine":6,"endColumn":15},{"ruleId":"112","severity":1,"message":"123","line":29,"column":6,"nodeType":"114","endLine":29,"endColumn":8,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":66,"column":24,"nodeType":"127","messageId":"128","endLine":66,"endColumn":26},{"ruleId":"107","severity":1,"message":"129","line":14,"column":9,"nodeType":"109","messageId":"110","endLine":14,"endColumn":22},{"ruleId":"107","severity":1,"message":"130","line":24,"column":9,"nodeType":"109","messageId":"110","endLine":24,"endColumn":18},{"ruleId":"112","severity":1,"message":"131","line":36,"column":6,"nodeType":"114","endLine":36,"endColumn":13,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":85,"column":13,"nodeType":"121","endLine":89,"endColumn":15},{"ruleId":"103","replacedBy":"135"},{"ruleId":"105","replacedBy":"136"},{"ruleId":"107","severity":1,"message":"137","line":5,"column":23,"nodeType":"109","messageId":"110","endLine":5,"endColumn":35},{"ruleId":"112","severity":1,"message":"138","line":41,"column":6,"nodeType":"114","endLine":41,"endColumn":18,"suggestions":"139"},{"ruleId":"112","severity":1,"message":"140","line":26,"column":6,"nodeType":"114","endLine":26,"endColumn":8,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Club' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchFavsData'. Either include it or remove the dependency array.","ArrayExpression",["144"],"'Login' is defined but never used.","React Hook useEffect has a missing dependency: 'isSignedIn'. Either include it or remove the dependency array.",["145"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isEdit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'club', 'getClubInfo', and 'props.isEdit'. Either include them or remove the dependency array.",["146"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'editLinkRoute' is assigned a value but never used.","'statusInd' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'renderTag'. Either include it or remove the dependency array.",["147"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["142"],["143"],"'GoogleButton' is defined but never used.","React Hook useEffect has missing dependencies: 'rawData', 'setUser', and 'user'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'fetchFavData'. Either include it or remove the dependency array.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [fetchFavsData, user]",{"range":"162","text":"163"},"Update the dependencies array to be: [isSignedIn, user]",{"range":"164","text":"165"},"Update the dependencies array to be: [club, getClubInfo, props.isEdit]",{"range":"166","text":"167"},"Update the dependencies array to be: [isFav, renderTag]",{"range":"168","text":"169"},"Update the dependencies array to be: [isSignedIn, rawData, setUser, user]",{"range":"170","text":"171"},"Update the dependencies array to be: [fetchFavData]",{"range":"172","text":"173"},[1019,1025],"[fetchFavsData, user]",[642,648],"[isSignedIn, user]",[615,617],"[club, getClubInfo, props.isEdit]",[1150,1157],"[isFav, renderTag]",[1383,1395],"[isSignedIn, rawData, setUser, user]",[814,816],"[fetchFavData]"]