[{"/Users/aaronkang/Desktop/Clubview/client/src/index.js":"1","/Users/aaronkang/Desktop/Clubview/client/src/components/App.js":"2","/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome.jsx":"3","/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx":"4","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx":"5","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx":"6","/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx":"7","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx":"8","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx":"9","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx":"10","/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx":"11","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx":"12","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx":"13","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx":"14","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx":"15","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx":"16","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx":"17","/Users/aaronkang/Desktop/Clubview/client/src/components/Filter/Filter.jsx":"18"},{"size":164,"mtime":1622346534281,"results":"19","hashOfConfig":"20"},{"size":1577,"mtime":1624252856267,"results":"21","hashOfConfig":"20"},{"size":557,"mtime":1622346534281,"results":"22","hashOfConfig":"20"},{"size":1256,"mtime":1622420134508,"results":"23","hashOfConfig":"20"},{"size":3710,"mtime":1624225801815,"results":"24","hashOfConfig":"20"},{"size":931,"mtime":1623844565537,"results":"25","hashOfConfig":"20"},{"size":1964,"mtime":1624252814280,"results":"26","hashOfConfig":"20"},{"size":7288,"mtime":1623835206851,"results":"27","hashOfConfig":"20"},{"size":2328,"mtime":1624252940243,"results":"28","hashOfConfig":"20"},{"size":138,"mtime":1623833010911,"results":"29","hashOfConfig":"20"},{"size":595,"mtime":1622717558232,"results":"30","hashOfConfig":"20"},{"size":679,"mtime":1623895183398,"results":"31","hashOfConfig":"20"},{"size":645,"mtime":1623837281469,"results":"32","hashOfConfig":"20"},{"size":1972,"mtime":1624336402957,"results":"33","hashOfConfig":"20"},{"size":605,"mtime":1624220427759,"results":"34","hashOfConfig":"20"},{"size":116,"mtime":1624253686728,"results":"35","hashOfConfig":"20"},{"size":954,"mtime":1624333790154,"results":"36","hashOfConfig":"20"},{"size":269,"mtime":1624143065642,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"zxns19",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"/Users/aaronkang/Desktop/Clubview/client/src/index.js",[],["79","80"],"/Users/aaronkang/Desktop/Clubview/client/src/components/App.js",["81","82"],"import React, { useState, useEffect } from \"react\";\nimport Welcome from \"../components/Welcome\";\nimport Header from \"../components/Header/Header\";\nimport Dashboard from \"../components/Dashboard/Dashboard\";\nimport Profile from \"../components/Profile/Profile\";\nimport AddArea from \"../components/AddArea/AddArea\";\nimport Clubinfo from \"../components/Clubinfo/Clubinfo\";\nimport { UserContext, AuthContext } from \"../context/user\";\nimport \"../styles/Styles.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Club from \"./Club/Club\";\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [isSignedIn, setSignedIn] = useState(false);\n\n  return (\n    <div>\n      <div className=\"container-fluid\">\n        <AuthContext.Provider value={{ isSignedIn, setSignedIn }}>\n          <UserContext.Provider value={{ user, setUser }}>\n            <Router>\n              <Header />\n              <Switch>\n                <Route path=\"/clubs\" exact component={Dashboard} />\n                <Route path=\"/profile\" component={Profile} />\n                <Route path=\"/clubs/add\" exact>\n                  <AddArea isEdit={false} />\n                </Route>\n                <Route path=\"/edit\">\n                  <AddArea isEdit={true} />\n                </Route>\n                <Route path=\"/clubs/\" component={Clubinfo} />\n                <Route path=\"/\" exact component={Welcome} />\n              </Switch>\n            </Router>\n          </UserContext.Provider>\n        </AuthContext.Provider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx",["83","84","85"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport Login from \"../GoogleAuth/Login\";\nimport \"./Header.css\";\nimport { AuthContext, UserContext } from \"../../context/user\";\n\nfunction Header() {\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n\n  const [profile, setProfile] = useState(\"\");\n\n  useEffect(() => {\n    if (user && isSignedIn) {\n      setProfile(user.imageUrl);\n    }\n  }, [user]);\n\n  return (\n    <nav className=\"navbar sticky-top navbar-expand-lg navbar-light\">\n      <Link className=\"navbar-brand\" to=\"/clubs\">\n        Club View\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link active\" to=\"/clubs\">\n              Clubs\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/clubs/add\">\n              <Fab variant=\"extended\" size=\"large\">\n                <AddIcon />\n                Add Club\n              </Fab>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/profile/settings\">\n              <Fab size=\"medium\">\n                {isSignedIn ? (\n                  <img className=\"profile-picture\" src={profile}></img>\n                ) : (\n                  <AccountCircleIcon />\n                )}\n              </Fab>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx",["86","87","88"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./AddArea.css\";\n\nfunction AddArea(props) {\n  const isEdit = props.isEdit;\n  const currentURL_string = window.location.href;\n  const id = currentURL_string.substring(\n    currentURL_string.lastIndexOf(\"/\") + 1\n  );\n\n  const [club, setClub] = useState({\n    cname: \"\",\n    lead: \"\",\n    email: \"\",\n    category: \"                        \",\n    desc: \"\",\n    site: \"\",\n    start: \"\",\n    end: \"\",\n    emoji: \"💡\",\n  });\n\n  useEffect(() => {\n    if (props.isEdit === true) {\n      getClubInfo();\n      console.log(club);\n    }\n  }, []);\n\n  function getClubInfo() {\n    axios\n      .get(\"https://clubview-server.herokuapp.com/clubs/\" + id)\n      .then((res) => setClub(res.data))\n      .catch((err) => console.log(err));\n  }\n\n  function handleChange(event) {\n    let { name, value } = event.target;\n    setClub((prevClub) => {\n      console.log(prevClub);\n      return {\n        ...prevClub,\n        [name]: value,\n      };\n    });\n  }\n\n  function stillEmpty() {\n    return (\n      club.cname === \"\" ||\n      club.lead === \"\" ||\n      club.email === \"\" ||\n      club.category === \"                        \" ||\n      club.desc === \"\" ||\n      club.start === \"\" ||\n      club.end === \"\"\n    );\n  }\n\n  function submitClub(event) {\n    if (stillEmpty()) {\n      alert(\"Please fill in all required sections\");\n      event.preventDefault();\n    } else {\n      if (props.isEdit == false) {\n        alert(\"Club Add successful.\");\n        axios\n          .post(\"https://clubview-server.herokuapp.com/clubs/add\", club)\n          .then((res) => console.log(res.data))\n          .catch((err) => console.log(err));\n      } else {\n        alert(\"Club Infomration Updated!!!!! \");\n        axios\n          .post(\n            \"https://clubview-server.herokuapp.com/clubs/update/\" + id,\n            club\n          )\n          .then((res) => console.log(res.data))\n          .catch((err) => console.log(err));\n      }\n    }\n    event.preventDefault();\n  }\n\n  return (\n    <section>\n      <form className=\"needs-validation\" noValidate>\n        <div className=\"row add-Area\">\n          <div className=\"container-fluid-add col-lg-5 col-md-12\">\n            <h4>Choose an emoji!</h4>\n            <p>that best represents your club</p>\n            <div className=\"content\">{club.emoji}</div>\n            <input\n              name=\"emoji\"\n              type=\"text\"\n              className=\"input-styling form-control mx-auto\"\n              onChange={handleChange}\n              value={club.emoji}\n              maxLength=\"3\"\n              required\n            />\n          </div>\n\n          <div className=\"container-fluid-add col-lg-7 col-md-12\">\n            <h4>Club Information</h4>\n\n            <div className=\"form-group row\">\n              <label for=\"cName_\">Club Name*</label>\n              <input\n                name=\"cname\"\n                type=\"text\"\n                className=\"form-control\"\n                id=\"cName_\"\n                onChange={handleChange}\n                value={club.cname}\n                required\n              />\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"cLead\">Club Lead Name(s)*</label>\n              <input\n                name=\"lead\"\n                type=\"text\"\n                className=\"form-control\"\n                id=\"cLead\"\n                onChange={handleChange}\n                value={club.lead}\n                required\n              />\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"email\">Club Lead e-mail*</label>\n              <div className=\"input-group\">\n                <input\n                  name=\"email\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  onChange={handleChange}\n                  aria-describedby=\"emailHelp\"\n                  value={club.email}\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"category\">Club Category*</label>\n              <select\n                name=\"category\"\n                className=\"form-control\"\n                id=\"category\"\n                onChange={handleChange}\n                value={club.category}\n                required\n              >\n                <option> </option>\n                <option>Academic and Educational</option>\n                <option>Community service</option>\n                <option>Media and Publication</option>\n                <option>Political or multicultural</option>\n                <option>Recreation and sports</option>\n                <option>Religious and spiritual</option>\n                <option>Student government</option>\n              </select>\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"clubDesc\">Description of the Club*</label>\n              <textarea\n                className=\"form-control\"\n                name=\"desc\"\n                id=\"clubDesc\"\n                rows=\"3\"\n                onChange={handleChange}\n                value={club.desc}\n                required\n              ></textarea>\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"clubSite\">Website/Social Media Link</label>\n              <input\n                name=\"site\"\n                type=\"url\"\n                className=\"form-control\"\n                id=\"clubSite\"\n                onChange={handleChange}\n                value={club.site}\n                required\n              />\n            </div>\n\n            <div className=\"row\">\n              <label for=\"RecruitmentPeriod\">Recruitment Period*</label>\n              <div id=\"RecruitmentPeriod\">\n                <div className=\"row\">\n                  <div className=\"form-group col\">\n                    <div className=\"col-10\">\n                      <input\n                        name=\"start\"\n                        className=\"form-control\"\n                        type=\"datetime-local\"\n                        id=\"startDate\"\n                        onChange={handleChange}\n                        value={club.start}\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group col\">\n                    <div className=\"col-10\">\n                      <input\n                        name=\"end\"\n                        className=\"form-control\"\n                        type=\"datetime-local\"\n                        placeholder=\"End Date\"\n                        id=\"startDate\"\n                        onChange={handleChange}\n                        value={club.end}\n                        required\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              onClick={submitClub}\n              className=\"btn btn-primary\"\n              style={{ textAlign: \"right\" }}\n            >\n              {props.isEdit ? \"Update\" : \"Submit\"}\n            </button>\n          </div>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default AddArea;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx",["89","90","91","92"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport Fab from \"@material-ui/core/Fab\";\nimport \"./Club.css\";\nimport { AuthContext, UserContext } from \"../../context/user\";\nimport axios from \"axios\";\n\nfunction Club(props) {\n  const infoLinkRoute = \"clubs/\" + props.id;\n  const editLinkRoute = \"edit/\" + props.id;\n  const { user, setUser } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n  const [isFav, setFav] = useState(props.isFav);\n\n  const statusInd = {\n    height: \"17px\",\n    width: \"17px\",\n    backgroundColor: props.recruit[1],\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n    float: \"left\",\n    zIndex: \"2\",\n  };\n\n  useEffect(() => {}, [isFav]);\n\n  const handleFavClick = () => {\n    const notisFav = !isFav;\n    const clubid = props.id;\n    axios.post(\"http://localhost:5000/\" + user.email + \"/editfav\", {\n      notisFav,\n      clubid,\n    });\n    setFav(!isFav);\n  };\n\n  return (\n    <>\n      <div className=\"card mb-4\">\n        <div className=\"edit-icon-container\">\n          <Fab\n            className=\"edit-icon\"\n            onClick={handleFavClick}\n            aria-label=\"favorite\"\n            size=\"small\"\n          >\n            {isFav ? (\n              <FavoriteIcon className=\"edit-icon-heart\" fontSize=\"small\" />\n            ) : (\n              <FavoriteBorderIcon\n                className=\"edit-icon-heart\"\n                fontSize=\"small\"\n              />\n            )}\n          </Fab>\n        </div>\n        <Link to={infoLinkRoute}>\n          <div className=\"card-img-container\">\n            <img\n              className=\"card-img-top\"\n              src=\"./images/smallLong.png\"\n              alt=\"Card image cap\"\n            />\n            <p className=\"card-text\">{props.emoji}</p>\n          </div>\n        </Link>\n        <div className=\"card-body\">\n          <Link to={infoLinkRoute}>\n            <h4 style={{ color: \"black\" }}>{props.cname}</h4>\n            <p>{isFav ? \"true\" : \"false\"}</p>\n          </Link>\n          <span style={statusInd}></span>\n          <p className=\"card-text\">{props.recruit[0]}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Club;\n","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx",["93"],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx",["94"],"/Users/aaronkang/Desktop/Clubview/client/src/components/Filter/Filter.jsx",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":1,"column":27,"nodeType":"101","messageId":"102","endLine":1,"endColumn":36},{"ruleId":"99","severity":1,"message":"103","line":11,"column":8,"nodeType":"101","messageId":"102","endLine":11,"endColumn":12},{"ruleId":"99","severity":1,"message":"104","line":6,"column":8,"nodeType":"101","messageId":"102","endLine":6,"endColumn":13},{"ruleId":"105","severity":1,"message":"106","line":20,"column":6,"nodeType":"107","endLine":20,"endColumn":12,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":55,"column":19,"nodeType":"111","endLine":55,"endColumn":66},{"ruleId":"99","severity":1,"message":"112","line":6,"column":9,"nodeType":"101","messageId":"102","endLine":6,"endColumn":15},{"ruleId":"105","severity":1,"message":"113","line":29,"column":6,"nodeType":"107","endLine":29,"endColumn":8,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":66,"column":24,"nodeType":"117","messageId":"118","endLine":66,"endColumn":26},{"ruleId":"99","severity":1,"message":"119","line":12,"column":9,"nodeType":"101","messageId":"102","endLine":12,"endColumn":22},{"ruleId":"99","severity":1,"message":"120","line":13,"column":17,"nodeType":"101","messageId":"102","endLine":13,"endColumn":24},{"ruleId":"99","severity":1,"message":"121","line":14,"column":11,"nodeType":"101","messageId":"102","endLine":14,"endColumn":21},{"ruleId":"122","severity":1,"message":"123","line":61,"column":13,"nodeType":"111","endLine":65,"endColumn":15},{"ruleId":"105","severity":1,"message":"124","line":41,"column":6,"nodeType":"107","endLine":41,"endColumn":18,"suggestions":"125"},{"ruleId":"105","severity":1,"message":"126","line":19,"column":6,"nodeType":"107","endLine":19,"endColumn":8,"suggestions":"127"},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Club' is defined but never used.","'Login' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isSignedIn'. Either include it or remove the dependency array.","ArrayExpression",["130"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'isEdit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'club', 'getClubInfo', and 'props.isEdit'. Either include them or remove the dependency array.",["131"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'editLinkRoute' is assigned a value but never used.","'setUser' is assigned a value but never used.","'isSignedIn' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'rawData', 'setUser', and 'user'. Either include them or remove the dependency array.",["132"],"React Hook useEffect has missing dependencies: 'isSignedIn' and 'user.email'. Either include them or remove the dependency array.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [isSignedIn, user]",{"range":"142","text":"143"},"Update the dependencies array to be: [club, getClubInfo, props.isEdit]",{"range":"144","text":"145"},"Update the dependencies array to be: [isSignedIn, rawData, setUser, user]",{"range":"146","text":"147"},"Update the dependencies array to be: [isSignedIn, user.email]",{"range":"148","text":"149"},[642,648],"[isSignedIn, user]",[615,617],"[club, getClubInfo, props.isEdit]",[1369,1381],"[isSignedIn, rawData, setUser, user]",[557,559],"[isSignedIn, user.email]"]