[{"/Users/aaronkang/Desktop/Clubview/client/src/index.js":"1","/Users/aaronkang/Desktop/Clubview/client/src/components/App.js":"2","/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx":"3","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx":"4","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx":"5","/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx":"6","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx":"7","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx":"8","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx":"9","/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx":"10","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx":"11","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx":"12","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx":"13","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx":"14","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx":"15","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx":"16","/Users/aaronkang/Desktop/Clubview/client/src/images/index.js":"17","/Users/aaronkang/Desktop/Clubview/client/src/components/ClubsPage/ClubsPage.jsx":"18","/Users/aaronkang/Desktop/Clubview/client/src/components/Pagination/Pagiation.jsx":"19","/Users/aaronkang/Desktop/Clubview/client/src/components/Footer/Footer.jsx":"20","/Users/aaronkang/Desktop/Clubview/client/src/components/Toast/Toast.jsx":"21","/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome/Welcome.jsx":"22","/Users/aaronkang/Desktop/Clubview/client/src/components/animations/Loading/Loading.jsx":"23"},{"size":164,"mtime":1622346534281,"results":"24","hashOfConfig":"25"},{"size":1704,"mtime":1626648904763,"results":"26","hashOfConfig":"25"},{"size":2204,"mtime":1626667620442,"results":"27","hashOfConfig":"25"},{"size":3620,"mtime":1626839443952,"results":"28","hashOfConfig":"25"},{"size":931,"mtime":1623844565537,"results":"29","hashOfConfig":"25"},{"size":2138,"mtime":1626772738192,"results":"30","hashOfConfig":"25"},{"size":12214,"mtime":1626844241345,"results":"31","hashOfConfig":"25"},{"size":3367,"mtime":1626826159173,"results":"32","hashOfConfig":"25"},{"size":138,"mtime":1623833010911,"results":"33","hashOfConfig":"25"},{"size":595,"mtime":1622717558232,"results":"34","hashOfConfig":"25"},{"size":679,"mtime":1623895183398,"results":"35","hashOfConfig":"25"},{"size":682,"mtime":1624436209287,"results":"36","hashOfConfig":"25"},{"size":1213,"mtime":1626839422222,"results":"37","hashOfConfig":"25"},{"size":605,"mtime":1624220427759,"results":"38","hashOfConfig":"25"},{"size":3499,"mtime":1626839270497,"results":"39","hashOfConfig":"25"},{"size":3082,"mtime":1626839386957,"results":"40","hashOfConfig":"25"},{"size":52,"mtime":1624436809131,"results":"41","hashOfConfig":"25"},{"size":984,"mtime":1626839352162,"results":"42","hashOfConfig":"25"},{"size":417,"mtime":1624481895110,"results":"43","hashOfConfig":"25"},{"size":405,"mtime":1626827283674,"results":"44","hashOfConfig":"25"},{"size":579,"mtime":1624570255959,"results":"45","hashOfConfig":"25"},{"size":745,"mtime":1626649151212,"results":"46","hashOfConfig":"25"},{"size":378,"mtime":1626839335664,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1jvlyo8",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/aaronkang/Desktop/Clubview/client/src/index.js",[],["101","102"],"/Users/aaronkang/Desktop/Clubview/client/src/components/App.js",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx",["103","104"],"import React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport \"./Clubinfo.css\";\nimport moment from \"moment\";\n\nfunction Clubinfo() {\n  const currentURL_string = window.location.href;\n  const id = currentURL_string.substring(\n    currentURL_string.lastIndexOf(\"/\") + 1\n  );\n\n  const [clubInfo, setclubinfo] = useState({});\n  useEffect(() => {\n    axios\n      .get(\"https://clubview-server.herokuapp.com/clubs/\" + id)\n      .then((res) => setclubinfo(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"container-fluid-add col-lg-7 col-md-12\">\n          <div className=\"content\" style={{ fontSize: \"220px\" }}>\n            {clubInfo.emoji}\n          </div>\n        </div>\n        <div\n          className=\"container-fluid-info col-lg-5 col-md-12\"\n          style={{ textAlign: \"left\" }}\n        >\n          <Paper className=\"club-paper\" elevation=\"3\">\n            <div>\n              <h2 className=\"first-row\">{clubInfo.cname}</h2>\n              <a href={clubInfo.site}>\n                <img className=\"svg\" src={`/assets/internet.svg`}></img>\n              </a>\n            </div>\n            <p>\n              <b>{clubInfo.category}</b>\n            </p>\n            {clubInfo.isAlwaysOpen ? (\n              <p>\n                <mark>Always open for new members</mark>\n              </p>\n            ) : (\n              <>\n                <p>\n                  Apps Open:{\" \"}\n                  <mark>\n                    <b>{moment(clubInfo.end).format(\"MMM Do YYYY h:m A\")}</b>\n                  </mark>\n                </p>\n                <p>\n                  Apps Close:{\" \"}\n                  <mark>\n                    <b>{moment(clubInfo.end).format(\"MMM Do YYYY h:m A\")}</b>\n                  </mark>\n                </p>\n              </>\n            )}\n            <p>{clubInfo.desc}</p>\n            <h6>\n              Learn more on their{\" \"}\n              <a href={clubInfo.site}>\n                <u>website</u>\n              </a>\n            </h6>\n          </Paper>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Clubinfo;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx",["105"],"import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport \"./Dashboard.css\";\nimport ClubsPage from \"../ClubsPage/ClubsPage\";\nimport PaginationTab from \"../Pagination/Pagiation\";\nimport { AuthContext, UserContext } from \"../../context/user\";\nimport moment from \"moment\";\n\nfunction Dashboard() {\n  const [searchTerm, setSearch] = useState(\"\");\n  const [clubs, setClubs] = useState([]);\n  const [loadingClubs, setLoadingClubs] = useState(true);\n  const [loadingFavs, setLoadingFavs] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [clubsPerPage] = useState(8);\n  const [onlyOpen, setOnlyOpen] = useState(false);\n  const [favclubs, setFavClubs] = useState([]);\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n\n  const indexOfLastClub = currentPage * clubsPerPage;\n  const indexOfFirstClub = indexOfLastClub - clubsPerPage;\n  const currentClubs = dynamicSearch().slice(indexOfFirstClub, indexOfLastClub);\n\n  const fetchClubsData = async () => {\n    const res = await axios.get(\"https://clubview-server.herokuapp.com/clubs\");\n    setClubs(res.data);\n    setLoadingClubs(false);\n  };\n\n  const fetchFavsData = () => {\n    if (isSignedIn) {\n      axios\n        .get(\n          \"https://clubview-server.herokuapp.com/profile/favsID/\" + user.email\n        )\n        .then((res) => setFavClubs(res.data))\n        .then(() => setLoadingFavs(false));\n    }\n  };\n\n  useEffect(() => {\n    fetchFavsData();\n    fetchClubsData();\n  }, [user]);\n\n  function handleChange(event) {\n    const val = event.target.value;\n    setCurrentPage(1);\n    setSearch(val);\n  }\n\n  function dynamicSearch() {\n    const result = clubs.filter((club) =>\n      club.cname.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    if (onlyOpen) {\n      return result.filter(\n        (club) =>\n          club.isAlwaysOpen ||\n          (moment(club.start).isBefore(new Date()) &&\n            moment(club.end).isAfter(new Date()))\n      );\n    }\n    return result;\n  }\n\n  // function handleSearch(event) {\n  //   console.log(searchTerm);\n  //   const sTerm = searchTerm.toLowerCase();\n  //   const c = clubs.find((club) => String(club.cname).toLowerCase() === sTerm);\n\n  //   if (c === undefined) {\n  //     alert(\"Club not found\");\n  //     setSearch(\"\");\n  //   } else {\n  //     window.location.href = \"/clubs/\" + c._id;\n  //   }\n  // }\n\n  function findIsFav(clubItem) {\n    return favclubs.includes(clubItem._id);\n  }\n\n  function paginate(pageNumber) {\n    setCurrentPage(pageNumber);\n  }\n\n  return (\n    <div>\n      <form className=\"form-inline\" style={{ padding: \"1%\" }}>\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"text\"\n          value={searchTerm}\n          onChange={handleChange}\n          placeholder=\"Search Club\"\n          aria-label=\"Search\"\n        />\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            onClick={() => setOnlyOpen(!onlyOpen)}\n            checked={onlyOpen}\n            id=\"defaultCheck1\"\n          />\n          <label class=\"form-check-label\" for=\"defaultCheck1\">\n            Open Clubs Only\n          </label>\n        </div>\n      </form>\n      <div>\n        <ClubsPage\n          clubs={currentClubs}\n          loading={loadingClubs || (isSignedIn && loadingFavs)}\n          isFavFinder={findIsFav}\n        />\n      </div>\n      <PaginationTab\n        clubsPerPage={clubsPerPage}\n        totalClubs={dynamicSearch().length}\n        paginate={paginate}\n      />\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx",["106","107"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport \"./Header.css\";\nimport { AuthContext, UserContext } from \"../../context/user\";\n\nfunction Header() {\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n\n  const [profile, setProfile] = useState(\"\");\n\n  useEffect(() => {\n    if (user && isSignedIn) {\n      setProfile(user.imageUrl);\n    }\n  }, [user]);\n\n  return (\n    <nav className=\"navbar sticky-top navbar-expand-lg navbar-light\">\n      <Link className=\"navbar-brand\" to=\"/clubs\">\n        Club View\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link active\" to=\"/clubs\">\n              Clubs\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={isSignedIn ? \"/clubs/add\" : \"/clubs\"}>\n              <Fab variant=\"extended\" size=\"medium\" disabled={!isSignedIn}>\n                <AddIcon className=\"classes.extendedIcon\" />\n                Add Club\n              </Fab>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={isSignedIn ? \"/profile/my\" : \"/profile/settings\"}>\n              <Fab size=\"medium\">\n                {isSignedIn ? (\n                  <img\n                    className=\"profile-picture\"\n                    src={profile}\n                    alt=\"profile-picture\"\n                  ></img>\n                ) : (\n                  <AccountCircleIcon />\n                )}\n              </Fab>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx",["108","109"],"/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx",["110"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { AuthContext, UserContext } from \"../../context/user\";\nimport \"./Club.css\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nfunction Club(props) {\n  const infoLinkRoute = \"clubs/\" + props.id;\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n  const [status, setStatus] = useState({ message: \"\", color: \"gray\" });\n  const [isFav, setFav] = useState(props.isFav);\n\n  const nowMom = moment(new Date());\n  const startMom = moment(props.recruit.start);\n  const endMom = moment(props.recruit.end);\n\n  useEffect(() => {\n    renderTag();\n  }, [isFav]);\n\n  const handleFavClick = () => {\n    const notisFav = !isFav;\n    const clubid = props.id;\n    axios\n      .post(\n        \"https://clubview-server.herokuapp.com/profile/\" +\n          user.email +\n          \"/editfav\",\n        {\n          notisFav,\n          clubid,\n        }\n      )\n      .then((res) => console.log(res.data));\n    setFav(!isFav);\n  };\n\n  function renderTag() {\n    if (props.isAlwaysOpen) {\n      setStatus({ color: \"#C2e5aa\", message: \"OPEN\" });\n    } else {\n      const diff = startMom.diff(nowMom, \"days\");\n      if (diff < 10 && diff > 0) {\n        setStatus({ color: \"#FFF1BC\", message: \"INCOMING\" });\n      } else if (nowMom.isBetween(startMom, endMom, undefined, \"[]\")) {\n        setStatus({ color: \"#C2e5aa\", message: \"OPEN\" });\n      } else {\n        setStatus({ color: \"#FFBEAA\", message: \"CLOSED\" });\n      }\n    }\n  }\n\n  function renderDate() {\n    if (props.isAlwaysOpen) {\n      return \"Always open\";\n    }\n    return startMom.format(\"MM/DD\") + \" - \" + endMom.format(\"MM/DD\");\n  }\n\n  return (\n    <>\n      <div className=\"card mb-4\">\n        <div className=\"fav-icon-container\">\n          <Fab\n            className=\"fav-icon\"\n            onClick={handleFavClick}\n            aria-label=\"favorite\"\n            disabled={!isSignedIn}\n            size=\"small\"\n          >\n            {isFav ? (\n              <FavoriteIcon className=\"fav-icon-heart\" fontSize=\"small\" />\n            ) : (\n              <FavoriteBorderIcon className=\"fav-icon-heart\" fontSize=\"small\" />\n            )}\n          </Fab>\n        </div>\n        <Link to={infoLinkRoute}>\n          <div className=\"card-img-container\">\n            <img\n              className=\"card-img-top\"\n              src=\"./images/smallLong.png\"\n              alt=\"clubphoto\"\n            />\n            <p className=\"card-text\">{props.emoji}</p>\n          </div>\n        </Link>\n        <div className=\"card-body\">\n          <div className=\"d-flex\">\n            <Link to={infoLinkRoute}>\n              <p style={{ color: \"black\" }} className=\"clubName\">\n                {props.cname}\n              </p>\n            </Link>\n            <div className=\"ml-auto status-container\">\n              <Chip\n                label={status.message}\n                style={{ backgroundColor: status.color }}\n              />\n            </div>\n          </div>\n          <p className=\"recDate\">{renderDate()}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Club;\n","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx",["111"],"import axios from \"axios\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext, UserContext } from \"../../../context/user\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Loading from \"../../animations/Loading/Loading\";\nimport { HangOut } from \"../../../images/index\";\nimport \"./Content.css\";\n\nfunction MyClubs() {\n  const { isSignedIn } = useContext(AuthContext);\n  const { user } = useContext(UserContext);\n  const [isLoading, setLoading] = useState(true);\n  const [deleted, setDeleted] = useState(false);\n  const [my, setMy] = useState([]);\n\n  const fetchMyData = async () => {\n    if (!isSignedIn) {\n      setLoading(false);\n    }\n    if (isSignedIn && user != null) {\n      await axios\n        .get(\"https://clubview-server.herokuapp.com/profile/my/\" + user.email)\n        .then((res) => setMy(res.data))\n        .then(() => setLoading(false));\n    }\n  };\n  useEffect(() => {\n    fetchMyData();\n  }, [deleted]);\n\n  const handleDelete = (_id) => {\n    console.log(\n      \"https://clubview-server.herokuapp.com/profile/\" + _id + \"/\" + user.email\n    );\n    axios\n      .delete(\n        \"https://clubview-server.herokuapp.com/profile/\" +\n          _id +\n          \"/\" +\n          user.email\n      )\n      .then((res) => alert(res.data))\n      .then(() => setDeleted(true));\n  };\n\n  function renderMy() {\n    if (isLoading) {\n      return (\n        <>\n          <Loading />\n        </>\n      );\n    } else {\n      const data = Array.from(my);\n      if (data.length === 0) {\n        return (\n          <div>\n            <h4>You own no clubs...</h4>\n            <img alt=\"hangout\" className=\"icon-noFavs\" src={HangOut} />\n          </div>\n        );\n      } else {\n        return (\n          <>\n            <div className=\"mb-1\">\n              <h3 className=\"title\">My Clubs</h3>\n            </div>\n            <div className=\"table-responsive scrollable\">\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Category</th>\n                    <th scope=\"col\">Edit</th>\n                    <th scope=\"col\">Delete</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.map(({ _id, cname, category }) => {\n                    return (\n                      <tr>\n                        <td>{cname}</td>\n                        <td>{category}</td>\n                        <td>\n                          <Link to={\"edit/\" + _id}>\n                            <Fab size=\"small\">\n                              <EditIcon fontSize=\"small\" />\n                            </Fab>\n                          </Link>\n                        </td>\n                        <td>\n                          <Fab\n                            size=\"small\"\n                            onClick={() => {\n                              handleDelete(_id);\n                            }}\n                          >\n                            <DeleteIcon fontSize=\"small\" />\n                          </Fab>\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </>\n        );\n      }\n    }\n  }\n\n  return <>{renderMy()}</>;\n}\n\nexport default MyClubs;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx",["112"],"import axios from \"axios\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext, UserContext } from \"../../../context/user\";\nimport Loading from \"../../animations/Loading/Loading\";\nimport { HangOut } from \"../../../images/index\";\nimport moment from \"moment\";\nimport \"./Content.css\";\n\nfunction Favs() {\n  const [favs, setFavs] = useState([]);\n  const [isLoading, setLoading] = useState(true);\n  const { isSignedIn } = useContext(AuthContext);\n  const { user } = useContext(UserContext);\n\n  const fetchFavData = async () => {\n    if (!isSignedIn) {\n      setLoading(false);\n    }\n    if (isSignedIn && user != null) {\n      await axios\n        .get(\n          \"https://clubview-server.herokuapp.com/profile/favsFull/\" + user.email\n        )\n        .then((res) => setFavs(res.data))\n        .then(() => setLoading(false));\n    }\n  };\n  useEffect(() => {\n    fetchFavData();\n  }, []);\n\n  function renderFavs() {\n    if (isLoading) {\n      return (\n        <>\n          <Loading />\n        </>\n      );\n    } else {\n      const data = Array.from(favs);\n      if (data.length === 0) {\n        return (\n          <div>\n            <h4>You have no favorite clubs...</h4>\n            <img alt=\"hangout\" className=\"icon-noFavs\" src={HangOut} />\n          </div>\n        );\n      } else {\n        return (\n          <>\n            <div className=\"row mb-1\">\n              <div className=\"col-auto mr-auto\">\n                <h3>Favorites</h3>\n              </div>\n              <div className=\"col-auto\">\n                {/* <Fab variant=\"extended\" size=\"small\" onClick={generateFile(data)}>\n                <GetAppIcon className=\"classes.extendedIcon\" size=\"small\" />\n                Download .ics file\n              </Fab> */}\n              </div>\n            </div>\n            <div className=\"table-responsive scrollable\">\n              <table className=\"table table-striped\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">Name</th>\n                    <th scope=\"col\">Category</th>\n                    <th scope=\"col\">Rec. Start</th>\n                    <th scope=\"col\">Rec. End</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {data.map(({ cname, start, end, category, isAlwaysOpen }) => {\n                    return (\n                      <tr>\n                        <td>{cname}</td>\n                        <td>{category}</td>\n                        <td>\n                          {isAlwaysOpen\n                            ? \"None\"\n                            : moment(start).format(\"MM/DD/YYYY\")}\n                        </td>\n                        <td>\n                          {isAlwaysOpen\n                            ? \"None\"\n                            : moment(end).format(\"MM/DD/YYYY\")}\n                        </td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </>\n        );\n      }\n    }\n  }\n\n  return <>{renderFavs()}</>;\n}\n\nexport default Favs;\n","/Users/aaronkang/Desktop/Clubview/client/src/images/index.js",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/ClubsPage/ClubsPage.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Pagination/Pagiation.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Footer/Footer.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Toast/Toast.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome/Welcome.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/animations/Loading/Loading.jsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":19,"column":6,"nodeType":"119","endLine":19,"endColumn":8,"suggestions":"120"},{"ruleId":"121","severity":1,"message":"122","line":37,"column":17,"nodeType":"123","endLine":37,"endColumn":67},{"ruleId":"117","severity":1,"message":"124","line":45,"column":6,"nodeType":"119","endLine":45,"endColumn":12,"suggestions":"125"},{"ruleId":"117","severity":1,"message":"126","line":19,"column":6,"nodeType":"119","endLine":19,"endColumn":12,"suggestions":"127"},{"ruleId":"128","severity":1,"message":"129","line":54,"column":19,"nodeType":"123","endLine":58,"endColumn":20},{"ruleId":"117","severity":1,"message":"130","line":23,"column":6,"nodeType":"119","endLine":23,"endColumn":19,"suggestions":"131"},{"ruleId":"117","severity":1,"message":"132","line":44,"column":6,"nodeType":"119","endLine":44,"endColumn":8,"suggestions":"133"},{"ruleId":"117","severity":1,"message":"134","line":25,"column":6,"nodeType":"119","endLine":25,"endColumn":13,"suggestions":"135"},{"ruleId":"117","severity":1,"message":"136","line":32,"column":6,"nodeType":"119","endLine":32,"endColumn":15,"suggestions":"137"},{"ruleId":"117","severity":1,"message":"138","line":30,"column":6,"nodeType":"119","endLine":30,"endColumn":8,"suggestions":"139"},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["142"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchFavsData'. Either include it or remove the dependency array.",["143"],"React Hook useEffect has a missing dependency: 'isSignedIn'. Either include it or remove the dependency array.",["144"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'props.isEdit'. Either include it or remove the dependency array.",["145"],"React Hook useEffect has missing dependencies: 'getClubInfo' and 'props.isEdit'. Either include them or remove the dependency array.",["146"],"React Hook useEffect has a missing dependency: 'renderTag'. Either include it or remove the dependency array.",["147"],"React Hook useEffect has a missing dependency: 'fetchMyData'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'fetchFavData'. Either include it or remove the dependency array.",["149"],"no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [id]",{"range":"166","text":"167"},"Update the dependencies array to be: [fetchFavsData, user]",{"range":"168","text":"169"},"Update the dependencies array to be: [isSignedIn, user]",{"range":"170","text":"171"},"Update the dependencies array to be: [nameChecked, props.isEdit]",{"range":"172","text":"173"},"Update the dependencies array to be: [getClubInfo, props.isEdit]",{"range":"174","text":"175"},"Update the dependencies array to be: [isFav, renderTag]",{"range":"176","text":"177"},"Update the dependencies array to be: [deleted, fetchMyData]",{"range":"178","text":"179"},"Update the dependencies array to be: [fetchFavData]",{"range":"180","text":"181"},[574,576],"[id]",[1534,1540],"[fetchFavsData, user]",[601,607],"[isSignedIn, user]",[734,747],"[nameChecked, props.isEdit]",[1076,1078],"[getClubInfo, props.isEdit]",[910,917],"[isFav, renderTag]",[1080,1089],"[deleted, fetchMyData]",[909,911],"[fetchFavData]"]