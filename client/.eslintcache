[{"/Users/aaronkang/Desktop/Clubview/client/src/index.js":"1","/Users/aaronkang/Desktop/Clubview/client/src/components/App.js":"2","/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome.jsx":"3","/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx":"4","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx":"5","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx":"6","/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx":"7","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx":"8","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx":"9","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx":"10","/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx":"11","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx":"12","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx":"13","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx":"14","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx":"15","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx":"16","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx":"17","/Users/aaronkang/Desktop/Clubview/client/src/components/Filter/Filter.jsx":"18","/Users/aaronkang/Desktop/Clubview/client/src/images/index.js":"19","/Users/aaronkang/Desktop/Clubview/client/src/components/ClubsPage/ClubsPage.jsx":"20","/Users/aaronkang/Desktop/Clubview/client/src/components/Pagination/Pagiation.jsx":"21","/Users/aaronkang/Desktop/Clubview/client/src/components/Footer/Footer.jsx":"22","/Users/aaronkang/Desktop/Clubview/client/src/components/Toast/Toast.jsx":"23"},{"size":164,"mtime":1622346534281,"results":"24","hashOfConfig":"25"},{"size":1638,"mtime":1624787318587,"results":"26","hashOfConfig":"25"},{"size":557,"mtime":1622346534281,"results":"27","hashOfConfig":"25"},{"size":1523,"mtime":1624510481079,"results":"28","hashOfConfig":"25"},{"size":2995,"mtime":1626597163508,"results":"29","hashOfConfig":"25"},{"size":931,"mtime":1623844565537,"results":"30","hashOfConfig":"25"},{"size":2107,"mtime":1626598132079,"results":"31","hashOfConfig":"25"},{"size":11630,"mtime":1626597753929,"results":"32","hashOfConfig":"25"},{"size":3374,"mtime":1624784076127,"results":"33","hashOfConfig":"25"},{"size":138,"mtime":1623833010911,"results":"34","hashOfConfig":"25"},{"size":595,"mtime":1622717558232,"results":"35","hashOfConfig":"25"},{"size":679,"mtime":1623895183398,"results":"36","hashOfConfig":"25"},{"size":682,"mtime":1624436209287,"results":"37","hashOfConfig":"25"},{"size":1425,"mtime":1624830166025,"results":"38","hashOfConfig":"25"},{"size":605,"mtime":1624220427759,"results":"39","hashOfConfig":"25"},{"size":3087,"mtime":1624782442462,"results":"40","hashOfConfig":"25"},{"size":2920,"mtime":1624782517231,"results":"41","hashOfConfig":"25"},{"size":269,"mtime":1624143065642,"results":"42","hashOfConfig":"25"},{"size":52,"mtime":1624436809131,"results":"43","hashOfConfig":"25"},{"size":793,"mtime":1624517958858,"results":"44","hashOfConfig":"25"},{"size":417,"mtime":1624481895110,"results":"45","hashOfConfig":"25"},{"size":379,"mtime":1624513063298,"results":"46","hashOfConfig":"25"},{"size":579,"mtime":1624570255959,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"15lag24",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"50"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"/Users/aaronkang/Desktop/Clubview/client/src/index.js",[],["98","99"],"/Users/aaronkang/Desktop/Clubview/client/src/components/App.js",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx",["100","101"],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx",["102","103"],"/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx",["104","105","106"],"/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx",["107"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { AuthContext, UserContext } from \"../../context/user\";\nimport \"./Club.css\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nfunction Club(props) {\n  const infoLinkRoute = \"clubs/\" + props.id;\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n  const [status, setStatus] = useState({ message: \"\", color: \"gray\" });\n  const [isFav, setFav] = useState(props.isFav);\n\n  const nowMom = moment(new Date());\n  const startMom = moment(props.recruit.start);\n  const endMom = moment(props.recruit.end);\n\n  useEffect(() => {\n    renderTag();\n  }, [isFav]);\n\n  const handleFavClick = () => {\n    const notisFav = !isFav;\n    const clubid = props.id;\n    axios\n      .post(\n        \"https://clubview-server.herokuapp.com/profile/\" +\n          user.email +\n          \"/editfav\",\n        {\n          notisFav,\n          clubid,\n        }\n      )\n      .then((res) => console.log(res.data));\n    setFav(!isFav);\n  };\n\n  function renderTag() {\n    const diff = startMom.diff(nowMom, \"days\");\n    if (diff < 10 && diff > 0) {\n      setStatus({ color: \"#FFF1BC\", message: \"INCOMING\" });\n    } else if (nowMom.isBetween(startMom, endMom, undefined, \"[]\")) {\n      setStatus({ color: \"#C2e5aa\", message: \"OPEN\" });\n    } else {\n      setStatus({ color: \"#FFBEAA\", message: \"CLOSED\" });\n    }\n  }\n\n  function renderDate() {\n    return startMom.format(\"MM/DD\") + \" - \" + endMom.format(\"MM/DD\");\n  }\n\n  return (\n    <>\n      <div className=\"card mb-4\">\n        <div className=\"fav-icon-container\">\n          <Fab\n            className=\"fav-icon\"\n            onClick={handleFavClick}\n            aria-label=\"favorite\"\n            disabled={!isSignedIn}\n            size=\"small\"\n          >\n            {isFav ? (\n              <FavoriteIcon className=\"fav-icon-heart\" fontSize=\"small\" />\n            ) : (\n              <FavoriteBorderIcon className=\"fav-icon-heart\" fontSize=\"small\" />\n            )}\n          </Fab>\n        </div>\n        <Link to={infoLinkRoute}>\n          <div className=\"card-img-container\">\n            <img\n              className=\"card-img-top\"\n              src=\"./images/smallLong.png\"\n              alt=\"clubphoto\"\n            />\n            <p className=\"card-text\">{props.emoji}</p>\n          </div>\n        </Link>\n        <div className=\"card-body\">\n          <div className=\"d-flex\">\n            <Link to={infoLinkRoute}>\n              <p style={{ color: \"black\" }} className=\"clubName\">\n                {props.cname}\n              </p>\n            </Link>\n            <div className=\"ml-auto status-container\">\n              <Chip\n                label={status.message}\n                style={{ backgroundColor: status.color }}\n              />\n              {/* <span\n                className=\"status\"\n                style={{ backgroundColor: status.color }}\n              >\n                {status.message}\n              </span> */}\n            </div>\n          </div>\n          <p className=\"recDate\">{renderDate()}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Club;\n","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx",["108"],"import axios from \"axios\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext, UserContext } from \"../../../context/user\";\nimport Toast from \"../../Toast/Toast\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { HangOut } from \"../../../images/index\";\n\nfunction MyClubs() {\n  const { isSignedIn } = useContext(AuthContext);\n  const { user } = useContext(UserContext);\n  const [message, setMessage] = useState(\"\");\n  const [showingToast, setToast] = useState(false);\n  const [my, setMy] = useState([]);\n\n  const fetchMyData = async () => {\n    if (isSignedIn && user != null) {\n      await axios\n        .get(\"https://clubview-server.herokuapp.com/profile/my/\" + user.email)\n        .then((res) => setMy(res.data))\n        .then(() => console.log(\"fetched favs\"));\n    }\n  };\n  useEffect(() => {\n    fetchMyData();\n  }, [showingToast]);\n\n  const handleDelete = (_id) => {\n    axios\n      .delete(\"https://clubview-server.herokuapp.com/profile/\" + _id)\n      .then((res) => setMessage(res.data))\n      .then(() => setToast(true));\n  };\n\n  function renderMy() {\n    const data = Array.from(my);\n    if (data.length === 0) {\n      return (\n        <div>\n          <h4>You own no clubs...</h4>\n          <img alt=\"hangout\" className=\"icon-noFavs\" src={HangOut} />\n        </div>\n      );\n    } else {\n      return (\n        <>\n          {showingToast ? <Toast message={message} /> : null}\n          <div className=\"mb-1\">\n            <h3 className=\"title\">My Clubs</h3>\n          </div>\n          <div className=\"table-responsive vert\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Category</th>\n                  <th scope=\"col\">Edit</th>\n                  <th scope=\"col\">Delete</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map(({ _id, cname, category }) => {\n                  return (\n                    <tr>\n                      <td>{cname}</td>\n                      <td>{category}</td>\n                      <td>\n                        <Link to={\"edit/\" + _id}>\n                          <Fab size=\"small\">\n                            <EditIcon fontSize=\"small\" />\n                          </Fab>\n                        </Link>\n                      </td>\n                      <td>\n                        <Fab\n                          size=\"small\"\n                          onClick={() => {\n                            handleDelete(_id);\n                          }}\n                        >\n                          <DeleteIcon fontSize=\"small\" />\n                        </Fab>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </>\n      );\n    }\n  }\n\n  return <>{renderMy()}</>;\n}\n\nexport default MyClubs;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx",["109","110","111","112"],"import axios from \"axios\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext, UserContext } from \"../../../context/user\";\nimport Fab from \"@material-ui/core/Fab\";\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\nimport { HangOut } from \"../../../images/index\";\nimport moment from \"moment\";\n\nfunction Favs() {\n  const [favs, setFavs] = useState([]);\n  const { isSignedIn } = useContext(AuthContext);\n  const { user } = useContext(UserContext);\n\n  //TO-DO:\n  //Find out why database is giving empty arry for fav array\n\n  const fetchFavData = async () => {\n    if (isSignedIn && user != null) {\n      await axios\n        .get(\n          \"https://clubview-server.herokuapp.com/profile/favsFull/\" + user.email\n        )\n        .then((res) => setFavs(res.data))\n        .then(() => console.log(\"fetched favs\"));\n    }\n  };\n  useEffect(() => {\n    fetchFavData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"favs is now\", favs);\n  }, [favs]);\n\n  function generateFile(data) {\n    return false;\n  }\n\n  function renderFavs() {\n    // const header = [\n    //   \"Name\",\n    //   \"Rec. Start\",\n    //   \"Rec. End\",\n    //   \"Category\",\n    //   \"Notification\",\n    // ];\n    // const columns = [\"cname\", \"start\", \"end\", \"category\"];\n    const data = Array.from(favs);\n    if (data.length === 0) {\n      return (\n        <div>\n          <h4>You have no favorite clubs...</h4>\n          <img alt=\"hangout\" className=\"icon-noFavs\" src={HangOut} />\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"row mb-1\">\n            <div className=\"col-auto mr-auto\">\n              <h3>Favorites</h3>\n            </div>\n            <div className=\"col-auto\">\n              {/* <Fab variant=\"extended\" size=\"small\" onClick={generateFile(data)}>\n                <GetAppIcon className=\"classes.extendedIcon\" size=\"small\" />\n                Download .ics file\n              </Fab> */}\n            </div>\n          </div>\n          <div className=\"table-responsive vert\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Rec. Start</th>\n                  <th scope=\"col\">Rec. End</th>\n                  <th scope=\"col\">Category</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map(({ cname, start, end, category }) => {\n                  return (\n                    <tr>\n                      <td>{cname}</td>\n                      <td>{category}</td>\n                      <td>{moment(start).format(\"MM/DD/YYYY\")}</td>\n                      <td>{moment(end).format(\"MM/DD/YYYY\")}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </>\n      );\n    }\n  }\n\n  return <>{renderFavs()}</>;\n}\n\nexport default Favs;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Filter/Filter.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/images/index.js",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/ClubsPage/ClubsPage.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Pagination/Pagiation.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Footer/Footer.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Toast/Toast.jsx",[],{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":6,"column":8,"nodeType":"119","messageId":"120","endLine":6,"endColumn":14},{"ruleId":"121","severity":1,"message":"122","line":44,"column":6,"nodeType":"123","endLine":44,"endColumn":12,"suggestions":"124"},{"ruleId":"121","severity":1,"message":"125","line":19,"column":6,"nodeType":"123","endLine":19,"endColumn":12,"suggestions":"126"},{"ruleId":"127","severity":1,"message":"128","line":54,"column":19,"nodeType":"129","endLine":58,"endColumn":20},{"ruleId":"117","severity":1,"message":"130","line":12,"column":23,"nodeType":"119","messageId":"120","endLine":12,"endColumn":33},{"ruleId":"121","severity":1,"message":"131","line":37,"column":6,"nodeType":"123","endLine":37,"endColumn":8,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":130,"column":18,"nodeType":"135","messageId":"136","endLine":130,"endColumn":20},{"ruleId":"121","severity":1,"message":"137","line":25,"column":6,"nodeType":"123","endLine":25,"endColumn":13,"suggestions":"138"},{"ruleId":"121","severity":1,"message":"139","line":28,"column":6,"nodeType":"123","endLine":28,"endColumn":20,"suggestions":"140"},{"ruleId":"117","severity":1,"message":"141","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":11},{"ruleId":"117","severity":1,"message":"142","line":5,"column":8,"nodeType":"119","messageId":"120","endLine":5,"endColumn":18},{"ruleId":"121","severity":1,"message":"143","line":29,"column":6,"nodeType":"123","endLine":29,"endColumn":8,"suggestions":"144"},{"ruleId":"117","severity":1,"message":"145","line":35,"column":12,"nodeType":"119","messageId":"120","endLine":35,"endColumn":24},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"no-unused-vars","'Filter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchFavsData'. Either include it or remove the dependency array.","ArrayExpression",["148"],"React Hook useEffect has a missing dependency: 'isSignedIn'. Either include it or remove the dependency array.",["149"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'setChecked' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'club', 'getClubInfo', and 'props.isEdit'. Either include them or remove the dependency array.",["150"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'renderTag'. Either include it or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'fetchMyData'. Either include it or remove the dependency array.",["152"],"'Fab' is defined but never used.","'GetAppIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchFavData'. Either include it or remove the dependency array.",["153"],"'generateFile' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [fetchFavsData, user]",{"range":"166","text":"167"},"Update the dependencies array to be: [isSignedIn, user]",{"range":"168","text":"169"},"Update the dependencies array to be: [club, getClubInfo, props.isEdit]",{"range":"170","text":"171"},"Update the dependencies array to be: [isFav, renderTag]",{"range":"172","text":"173"},"Update the dependencies array to be: [fetchMyData, showingToast]",{"range":"174","text":"175"},"Update the dependencies array to be: [fetchFavData]",{"range":"176","text":"177"},[1429,1435],"[fetchFavsData, user]",[601,607],"[isSignedIn, user]",[957,959],"[club, getClubInfo, props.isEdit]",[910,917],"[isFav, renderTag]",[994,1008],"[fetchMyData, showingToast]",[901,903],"[fetchFavData]"]