[{"/Users/aaronkang/Desktop/Clubview/client/src/index.js":"1","/Users/aaronkang/Desktop/Clubview/client/src/components/App.js":"2","/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx":"3","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx":"4","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx":"5","/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx":"6","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx":"7","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx":"8","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx":"9","/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx":"10","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx":"11","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx":"12","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx":"13","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx":"14","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx":"15","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx":"16","/Users/aaronkang/Desktop/Clubview/client/src/images/index.js":"17","/Users/aaronkang/Desktop/Clubview/client/src/components/ClubsPage/ClubsPage.jsx":"18","/Users/aaronkang/Desktop/Clubview/client/src/components/Pagination/Pagiation.jsx":"19","/Users/aaronkang/Desktop/Clubview/client/src/components/Footer/Footer.jsx":"20","/Users/aaronkang/Desktop/Clubview/client/src/components/Toast/Toast.jsx":"21","/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome/Welcome.jsx":"22"},{"size":164,"mtime":1622346534281,"results":"23","hashOfConfig":"24"},{"size":1704,"mtime":1626648904763,"results":"25","hashOfConfig":"24"},{"size":2204,"mtime":1626667620442,"results":"26","hashOfConfig":"24"},{"size":3719,"mtime":1626774341847,"results":"27","hashOfConfig":"24"},{"size":931,"mtime":1623844565537,"results":"28","hashOfConfig":"24"},{"size":2138,"mtime":1626772738192,"results":"29","hashOfConfig":"24"},{"size":11795,"mtime":1626775741110,"results":"30","hashOfConfig":"24"},{"size":3559,"mtime":1626642229753,"results":"31","hashOfConfig":"24"},{"size":138,"mtime":1623833010911,"results":"32","hashOfConfig":"24"},{"size":595,"mtime":1622717558232,"results":"33","hashOfConfig":"24"},{"size":679,"mtime":1623895183398,"results":"34","hashOfConfig":"24"},{"size":682,"mtime":1624436209287,"results":"35","hashOfConfig":"24"},{"size":1251,"mtime":1626774264464,"results":"36","hashOfConfig":"24"},{"size":605,"mtime":1624220427759,"results":"37","hashOfConfig":"24"},{"size":3087,"mtime":1626603693917,"results":"38","hashOfConfig":"24"},{"size":3035,"mtime":1626605136070,"results":"39","hashOfConfig":"24"},{"size":52,"mtime":1624436809131,"results":"40","hashOfConfig":"24"},{"size":842,"mtime":1626598969177,"results":"41","hashOfConfig":"24"},{"size":417,"mtime":1624481895110,"results":"42","hashOfConfig":"24"},{"size":397,"mtime":1626679823857,"results":"43","hashOfConfig":"24"},{"size":579,"mtime":1624570255959,"results":"44","hashOfConfig":"24"},{"size":745,"mtime":1626649151212,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"zxns19",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/Users/aaronkang/Desktop/Clubview/client/src/index.js",[],["96","97"],"/Users/aaronkang/Desktop/Clubview/client/src/components/App.js",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx",["98","99"],"import React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport \"./Clubinfo.css\";\nimport moment from \"moment\";\n\nfunction Clubinfo() {\n  const currentURL_string = window.location.href;\n  const id = currentURL_string.substring(\n    currentURL_string.lastIndexOf(\"/\") + 1\n  );\n\n  const [clubInfo, setclubinfo] = useState({});\n  useEffect(() => {\n    axios\n      .get(\"https://clubview-server.herokuapp.com/clubs/\" + id)\n      .then((res) => setclubinfo(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"container-fluid-add col-lg-7 col-md-12\">\n          <div className=\"content\" style={{ fontSize: \"220px\" }}>\n            {clubInfo.emoji}\n          </div>\n        </div>\n        <div\n          className=\"container-fluid-info col-lg-5 col-md-12\"\n          style={{ textAlign: \"left\" }}\n        >\n          <Paper className=\"club-paper\" elevation=\"3\">\n            <div>\n              <h2 className=\"first-row\">{clubInfo.cname}</h2>\n              <a href={clubInfo.site}>\n                <img className=\"svg\" src={`/assets/internet.svg`}></img>\n              </a>\n            </div>\n            <p>\n              <b>{clubInfo.category}</b>\n            </p>\n            {clubInfo.isAlwaysOpen ? (\n              <p>\n                <mark>Always open for new members</mark>\n              </p>\n            ) : (\n              <>\n                <p>\n                  Apps Open:{\" \"}\n                  <mark>\n                    <b>{moment(clubInfo.end).format(\"MMM Do YYYY h:m A\")}</b>\n                  </mark>\n                </p>\n                <p>\n                  Apps Close:{\" \"}\n                  <mark>\n                    <b>{moment(clubInfo.end).format(\"MMM Do YYYY h:m A\")}</b>\n                  </mark>\n                </p>\n              </>\n            )}\n            <p>{clubInfo.desc}</p>\n            <h6>\n              Learn more on their{\" \"}\n              <a href={clubInfo.site}>\n                <u>website</u>\n              </a>\n            </h6>\n          </Paper>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Clubinfo;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx",["100"],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx",["101","102"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport \"./Header.css\";\nimport { AuthContext, UserContext } from \"../../context/user\";\n\nfunction Header() {\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n\n  const [profile, setProfile] = useState(\"\");\n\n  useEffect(() => {\n    if (user && isSignedIn) {\n      setProfile(user.imageUrl);\n    }\n  }, [user]);\n\n  return (\n    <nav className=\"navbar sticky-top navbar-expand-lg navbar-light\">\n      <Link className=\"navbar-brand\" to=\"/clubs\">\n        Club View\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link active\" to=\"/clubs\">\n              Clubs\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={isSignedIn ? \"/clubs/add\" : \"/clubs\"}>\n              <Fab variant=\"extended\" size=\"medium\" disabled={!isSignedIn}>\n                <AddIcon className=\"classes.extendedIcon\" />\n                Add Club\n              </Fab>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={isSignedIn ? \"/profile/my\" : \"/profile/settings\"}>\n              <Fab size=\"medium\">\n                {isSignedIn ? (\n                  <img\n                    className=\"profile-picture\"\n                    src={profile}\n                    alt=\"profile-picture\"\n                  ></img>\n                ) : (\n                  <AccountCircleIcon />\n                )}\n              </Fab>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx",["103"],"/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx",["104"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { AuthContext, UserContext } from \"../../context/user\";\nimport \"./Club.css\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nfunction Club(props) {\n  const infoLinkRoute = \"clubs/\" + props.id;\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n  const [status, setStatus] = useState({ message: \"\", color: \"gray\" });\n  const [isFav, setFav] = useState(props.isFav);\n\n  const nowMom = moment(new Date());\n  const startMom = moment(props.recruit.start);\n  const endMom = moment(props.recruit.end);\n\n  useEffect(() => {\n    renderTag();\n  }, [isFav]);\n\n  const handleFavClick = () => {\n    const notisFav = !isFav;\n    const clubid = props.id;\n    axios\n      .post(\n        \"https://clubview-server.herokuapp.com/profile/\" +\n          user.email +\n          \"/editfav\",\n        {\n          notisFav,\n          clubid,\n        }\n      )\n      .then((res) => console.log(res.data));\n    setFav(!isFav);\n  };\n\n  function renderTag() {\n    if (props.isAlwaysOpen) {\n      setStatus({ color: \"#C2e5aa\", message: \"OPEN\" });\n    } else {\n      const diff = startMom.diff(nowMom, \"days\");\n      if (diff < 10 && diff > 0) {\n        setStatus({ color: \"#FFF1BC\", message: \"INCOMING\" });\n      } else if (nowMom.isBetween(startMom, endMom, undefined, \"[]\")) {\n        setStatus({ color: \"#C2e5aa\", message: \"OPEN\" });\n      } else {\n        setStatus({ color: \"#FFBEAA\", message: \"CLOSED\" });\n      }\n    }\n  }\n\n  function renderDate() {\n    if (props.isAlwaysOpen) {\n      return \"Always open\";\n    }\n    return startMom.format(\"MM/DD\") + \" - \" + endMom.format(\"MM/DD\");\n  }\n\n  return (\n    <>\n      <div className=\"card mb-4\">\n        <div className=\"fav-icon-container\">\n          <Fab\n            className=\"fav-icon\"\n            onClick={handleFavClick}\n            aria-label=\"favorite\"\n            disabled={!isSignedIn}\n            size=\"small\"\n          >\n            {isFav ? (\n              <FavoriteIcon className=\"fav-icon-heart\" fontSize=\"small\" />\n            ) : (\n              <FavoriteBorderIcon className=\"fav-icon-heart\" fontSize=\"small\" />\n            )}\n          </Fab>\n        </div>\n        <Link to={infoLinkRoute}>\n          <div className=\"card-img-container\">\n            <img\n              className=\"card-img-top\"\n              src=\"./images/smallLong.png\"\n              alt=\"clubphoto\"\n            />\n            <p className=\"card-text\">{props.emoji}</p>\n          </div>\n        </Link>\n        <div className=\"card-body\">\n          <div className=\"d-flex\">\n            <Link to={infoLinkRoute}>\n              <p style={{ color: \"black\" }} className=\"clubName\">\n                {props.cname}\n              </p>\n            </Link>\n            <div className=\"ml-auto status-container\">\n              <Chip\n                label={status.message}\n                style={{ backgroundColor: status.color }}\n              />\n              {/* <span\n                className=\"status\"\n                style={{ backgroundColor: status.color }}\n              >\n                {status.message}\n              </span> */}\n            </div>\n          </div>\n          <p className=\"recDate\">{renderDate()}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Club;\n","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx",["105"],"import axios from \"axios\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext, UserContext } from \"../../../context/user\";\nimport Toast from \"../../Toast/Toast\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { HangOut } from \"../../../images/index\";\n\nfunction MyClubs() {\n  const { isSignedIn } = useContext(AuthContext);\n  const { user } = useContext(UserContext);\n  const [message, setMessage] = useState(\"\");\n  const [showingToast, setToast] = useState(false);\n  const [my, setMy] = useState([]);\n\n  const fetchMyData = async () => {\n    if (isSignedIn && user != null) {\n      await axios\n        .get(\"https://clubview-server.herokuapp.com/profile/my/\" + user.email)\n        .then((res) => setMy(res.data))\n        .then(() => console.log(\"fetched favs\"));\n    }\n  };\n  useEffect(() => {\n    fetchMyData();\n  }, [showingToast]);\n\n  const handleDelete = (_id) => {\n    axios\n      .delete(\"https://clubview-server.herokuapp.com/profile/\" + _id)\n      .then((res) => setMessage(res.data))\n      .then(() => setToast(true));\n  };\n\n  function renderMy() {\n    const data = Array.from(my);\n    if (data.length === 0) {\n      return (\n        <div>\n          <h4>You own no clubs...</h4>\n          <img alt=\"hangout\" className=\"icon-noFavs\" src={HangOut} />\n        </div>\n      );\n    } else {\n      return (\n        <>\n          {showingToast ? <Toast message={message} /> : null}\n          <div className=\"mb-1\">\n            <h3 className=\"title\">My Clubs</h3>\n          </div>\n          <div className=\"table-responsive vert\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Category</th>\n                  <th scope=\"col\">Edit</th>\n                  <th scope=\"col\">Delete</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map(({ _id, cname, category }) => {\n                  return (\n                    <tr>\n                      <td>{cname}</td>\n                      <td>{category}</td>\n                      <td>\n                        <Link to={\"edit/\" + _id}>\n                          <Fab size=\"small\">\n                            <EditIcon fontSize=\"small\" />\n                          </Fab>\n                        </Link>\n                      </td>\n                      <td>\n                        <Fab\n                          size=\"small\"\n                          onClick={() => {\n                            handleDelete(_id);\n                          }}\n                        >\n                          <DeleteIcon fontSize=\"small\" />\n                        </Fab>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </>\n      );\n    }\n  }\n\n  return <>{renderMy()}</>;\n}\n\nexport default MyClubs;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx",["106"],"import axios from \"axios\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext, UserContext } from \"../../../context/user\";\n\nimport { HangOut } from \"../../../images/index\";\nimport moment from \"moment\";\n\nfunction Favs() {\n  const [favs, setFavs] = useState([]);\n  const { isSignedIn } = useContext(AuthContext);\n  const { user } = useContext(UserContext);\n\n  //TO-DO:\n  //Find out why database is giving empty arry for fav array\n\n  const fetchFavData = async () => {\n    if (isSignedIn && user != null) {\n      await axios\n        .get(\n          \"https://clubview-server.herokuapp.com/profile/favsFull/\" + user.email\n        )\n        .then((res) => setFavs(res.data))\n        .then(() => console.log(\"fetched favs\"));\n    }\n  };\n  useEffect(() => {\n    fetchFavData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"favs is now\", favs);\n  }, [favs]);\n\n  function renderFavs() {\n    // const header = [\n    //   \"Name\",\n    //   \"Rec. Start\",\n    //   \"Rec. End\",\n    //   \"Category\",\n    //   \"Notification\",\n    // ];\n    // const columns = [\"cname\", \"start\", \"end\", \"category\"];\n    const data = Array.from(favs);\n    if (data.length === 0) {\n      return (\n        <div>\n          <h4>You have no favorite clubs...</h4>\n          <img alt=\"hangout\" className=\"icon-noFavs\" src={HangOut} />\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"row mb-1\">\n            <div className=\"col-auto mr-auto\">\n              <h3>Favorites</h3>\n            </div>\n            <div className=\"col-auto\">\n              {/* <Fab variant=\"extended\" size=\"small\" onClick={generateFile(data)}>\n                <GetAppIcon className=\"classes.extendedIcon\" size=\"small\" />\n                Download .ics file\n              </Fab> */}\n            </div>\n          </div>\n          <div className=\"table-responsive vert\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Category</th>\n                  <th scope=\"col\">Rec. Start</th>\n                  <th scope=\"col\">Rec. End</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map(({ cname, start, end, category, isAlwaysOpen }) => {\n                  return (\n                    <tr>\n                      <td>{cname}</td>\n                      <td>{category}</td>\n                      <td>\n                        {isAlwaysOpen\n                          ? \"None\"\n                          : moment(start).format(\"MM/DD/YYYY\")}\n                      </td>\n                      <td>\n                        {isAlwaysOpen\n                          ? \"None\"\n                          : moment(end).format(\"MM/DD/YYYY\")}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </>\n      );\n    }\n  }\n\n  return <>{renderFavs()}</>;\n}\n\nexport default Favs;\n","/Users/aaronkang/Desktop/Clubview/client/src/images/index.js",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/ClubsPage/ClubsPage.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Pagination/Pagiation.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Footer/Footer.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Toast/Toast.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome/Welcome.jsx",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":19,"column":6,"nodeType":"113","endLine":19,"endColumn":8,"suggestions":"114"},{"ruleId":"115","severity":1,"message":"116","line":37,"column":17,"nodeType":"117","endLine":37,"endColumn":67},{"ruleId":"111","severity":1,"message":"118","line":46,"column":6,"nodeType":"113","endLine":46,"endColumn":12,"suggestions":"119"},{"ruleId":"111","severity":1,"message":"120","line":19,"column":6,"nodeType":"113","endLine":19,"endColumn":12,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":54,"column":19,"nodeType":"117","endLine":58,"endColumn":20},{"ruleId":"111","severity":1,"message":"124","line":38,"column":6,"nodeType":"113","endLine":38,"endColumn":8,"suggestions":"125"},{"ruleId":"111","severity":1,"message":"126","line":25,"column":6,"nodeType":"113","endLine":25,"endColumn":13,"suggestions":"127"},{"ruleId":"111","severity":1,"message":"128","line":28,"column":6,"nodeType":"113","endLine":28,"endColumn":20,"suggestions":"129"},{"ruleId":"111","severity":1,"message":"130","line":28,"column":6,"nodeType":"113","endLine":28,"endColumn":8,"suggestions":"131"},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["134"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchFavsData'. Either include it or remove the dependency array.",["135"],"React Hook useEffect has a missing dependency: 'isSignedIn'. Either include it or remove the dependency array.",["136"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has missing dependencies: 'club', 'getClubInfo', and 'props.isEdit'. Either include them or remove the dependency array.",["137"],"React Hook useEffect has a missing dependency: 'renderTag'. Either include it or remove the dependency array.",["138"],"React Hook useEffect has a missing dependency: 'fetchMyData'. Either include it or remove the dependency array.",["139"],"React Hook useEffect has a missing dependency: 'fetchFavData'. Either include it or remove the dependency array.",["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"145","fix":"146"},{"desc":"147","fix":"148"},{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},"Update the dependencies array to be: [id]",{"range":"155","text":"156"},"Update the dependencies array to be: [fetchFavsData, user]",{"range":"157","text":"158"},"Update the dependencies array to be: [isSignedIn, user]",{"range":"159","text":"160"},"Update the dependencies array to be: [club, getClubInfo, props.isEdit]",{"range":"161","text":"162"},"Update the dependencies array to be: [isFav, renderTag]",{"range":"163","text":"164"},"Update the dependencies array to be: [fetchMyData, showingToast]",{"range":"165","text":"166"},"Update the dependencies array to be: [fetchFavData]",{"range":"167","text":"168"},[574,576],"[id]",[1582,1588],"[fetchFavsData, user]",[601,607],"[isSignedIn, user]",[896,898],"[club, getClubInfo, props.isEdit]",[910,917],"[isFav, renderTag]",[994,1008],"[fetchMyData, showingToast]",[809,811],"[fetchFavData]"]