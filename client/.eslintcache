[{"/Users/aaronkang/Desktop/Clubview/client/src/index.js":"1","/Users/aaronkang/Desktop/Clubview/client/src/components/App.js":"2","/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx":"3","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx":"4","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx":"5","/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx":"6","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx":"7","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx":"8","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx":"9","/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx":"10","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx":"11","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx":"12","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx":"13","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx":"14","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx":"15","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx":"16","/Users/aaronkang/Desktop/Clubview/client/src/images/index.js":"17","/Users/aaronkang/Desktop/Clubview/client/src/components/ClubsPage/ClubsPage.jsx":"18","/Users/aaronkang/Desktop/Clubview/client/src/components/Pagination/Pagiation.jsx":"19","/Users/aaronkang/Desktop/Clubview/client/src/components/Footer/Footer.jsx":"20","/Users/aaronkang/Desktop/Clubview/client/src/components/Toast/Toast.jsx":"21","/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome/Welcome.jsx":"22"},{"size":164,"mtime":1622346534281,"results":"23","hashOfConfig":"24"},{"size":1704,"mtime":1626648904763,"results":"25","hashOfConfig":"24"},{"size":2204,"mtime":1626667620442,"results":"26","hashOfConfig":"24"},{"size":3719,"mtime":1626774341847,"results":"27","hashOfConfig":"24"},{"size":931,"mtime":1623844565537,"results":"28","hashOfConfig":"24"},{"size":2138,"mtime":1626772738192,"results":"29","hashOfConfig":"24"},{"size":12291,"mtime":1626820537494,"results":"30","hashOfConfig":"24"},{"size":3559,"mtime":1626786796294,"results":"31","hashOfConfig":"24"},{"size":138,"mtime":1623833010911,"results":"32","hashOfConfig":"24"},{"size":595,"mtime":1622717558232,"results":"33","hashOfConfig":"24"},{"size":679,"mtime":1623895183398,"results":"34","hashOfConfig":"24"},{"size":682,"mtime":1624436209287,"results":"35","hashOfConfig":"24"},{"size":1251,"mtime":1626774264464,"results":"36","hashOfConfig":"24"},{"size":605,"mtime":1624220427759,"results":"37","hashOfConfig":"24"},{"size":2932,"mtime":1626820549091,"results":"38","hashOfConfig":"24"},{"size":3065,"mtime":1626787846365,"results":"39","hashOfConfig":"24"},{"size":52,"mtime":1624436809131,"results":"40","hashOfConfig":"24"},{"size":842,"mtime":1626598969177,"results":"41","hashOfConfig":"24"},{"size":417,"mtime":1624481895110,"results":"42","hashOfConfig":"24"},{"size":397,"mtime":1626679823857,"results":"43","hashOfConfig":"24"},{"size":579,"mtime":1624570255959,"results":"44","hashOfConfig":"45"},{"size":745,"mtime":1626649151212,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"zxns19",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"49"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jvlyo8",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/Users/aaronkang/Desktop/Clubview/client/src/index.js",[],["97","98"],"/Users/aaronkang/Desktop/Clubview/client/src/components/App.js",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx",["99","100"],"import React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport \"./Clubinfo.css\";\nimport moment from \"moment\";\n\nfunction Clubinfo() {\n  const currentURL_string = window.location.href;\n  const id = currentURL_string.substring(\n    currentURL_string.lastIndexOf(\"/\") + 1\n  );\n\n  const [clubInfo, setclubinfo] = useState({});\n  useEffect(() => {\n    axios\n      .get(\"https://clubview-server.herokuapp.com/clubs/\" + id)\n      .then((res) => setclubinfo(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"container-fluid-add col-lg-7 col-md-12\">\n          <div className=\"content\" style={{ fontSize: \"220px\" }}>\n            {clubInfo.emoji}\n          </div>\n        </div>\n        <div\n          className=\"container-fluid-info col-lg-5 col-md-12\"\n          style={{ textAlign: \"left\" }}\n        >\n          <Paper className=\"club-paper\" elevation=\"3\">\n            <div>\n              <h2 className=\"first-row\">{clubInfo.cname}</h2>\n              <a href={clubInfo.site}>\n                <img className=\"svg\" src={`/assets/internet.svg`}></img>\n              </a>\n            </div>\n            <p>\n              <b>{clubInfo.category}</b>\n            </p>\n            {clubInfo.isAlwaysOpen ? (\n              <p>\n                <mark>Always open for new members</mark>\n              </p>\n            ) : (\n              <>\n                <p>\n                  Apps Open:{\" \"}\n                  <mark>\n                    <b>{moment(clubInfo.end).format(\"MMM Do YYYY h:m A\")}</b>\n                  </mark>\n                </p>\n                <p>\n                  Apps Close:{\" \"}\n                  <mark>\n                    <b>{moment(clubInfo.end).format(\"MMM Do YYYY h:m A\")}</b>\n                  </mark>\n                </p>\n              </>\n            )}\n            <p>{clubInfo.desc}</p>\n            <h6>\n              Learn more on their{\" \"}\n              <a href={clubInfo.site}>\n                <u>website</u>\n              </a>\n            </h6>\n          </Paper>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Clubinfo;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx",["101"],"import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport \"./Dashboard.css\";\nimport ClubsPage from \"../ClubsPage/ClubsPage\";\nimport PaginationTab from \"../Pagination/Pagiation\";\nimport { AuthContext, UserContext } from \"../../context/user\";\nimport moment from \"moment\";\n\nfunction Dashboard() {\n  const [searchTerm, setSearch] = useState(\"\");\n  const [clubs, setClubs] = useState([]);\n  const [loadingClubs, setLoadingClubs] = useState(true);\n  const [loadingFavs, setLoadingFavs] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [clubsPerPage] = useState(8);\n  const [onlyOpen, setOnlyOpen] = useState(false);\n  const [favclubs, setFavClubs] = useState([]);\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n\n  const indexOfLastClub = currentPage * clubsPerPage;\n  const indexOfFirstClub = indexOfLastClub - clubsPerPage;\n  const currentClubs = dynamicSearch().slice(indexOfFirstClub, indexOfLastClub);\n\n  const fetchClubsData = async () => {\n    const res = await axios.get(\"https://clubview-server.herokuapp.com/clubs\");\n    setClubs(res.data);\n    setLoadingClubs(false);\n  };\n\n  const fetchFavsData = () => {\n    if (isSignedIn) {\n      axios\n        .get(\n          \"https://clubview-server.herokuapp.com/profile/favsID/\" + user.email\n        )\n        .then((res) => setFavClubs(res.data))\n        .then(() => setLoadingFavs(false));\n    }\n  };\n\n  useEffect(() => {\n    fetchFavsData();\n    fetchClubsData();\n    console.log(\"user in dashboard is \", user);\n  }, [user]);\n\n  function handleChange(event) {\n    const val = event.target.value;\n    setCurrentPage(1);\n    setSearch(val);\n    console.log(searchTerm);\n  }\n\n  function dynamicSearch() {\n    const result = clubs.filter((club) =>\n      club.cname.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    if (onlyOpen) {\n      return result.filter(\n        (club) =>\n          club.isAlwaysOpen ||\n          (moment(club.start).isBefore(new Date()) &&\n            moment(club.end).isAfter(new Date()))\n      );\n    }\n    return result;\n  }\n\n  // function handleSearch(event) {\n  //   console.log(searchTerm);\n  //   const sTerm = searchTerm.toLowerCase();\n  //   const c = clubs.find((club) => String(club.cname).toLowerCase() === sTerm);\n\n  //   if (c === undefined) {\n  //     alert(\"Club not found\");\n  //     setSearch(\"\");\n  //   } else {\n  //     window.location.href = \"/clubs/\" + c._id;\n  //   }\n  // }\n\n  function findIsFav(clubItem) {\n    return favclubs.includes(clubItem._id);\n  }\n\n  function paginate(pageNumber) {\n    setCurrentPage(pageNumber);\n  }\n\n  return (\n    <div>\n      <form className=\"form-inline\" style={{ padding: \"1%\" }}>\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"text\"\n          value={searchTerm}\n          onChange={handleChange}\n          placeholder=\"Search Club\"\n          aria-label=\"Search\"\n        />\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            onClick={() => setOnlyOpen(!onlyOpen)}\n            checked={onlyOpen}\n            id=\"defaultCheck1\"\n          />\n          <label class=\"form-check-label\" for=\"defaultCheck1\">\n            Open Clubs Only\n          </label>\n        </div>\n      </form>\n      <div className=\"dashboard\">\n        <ClubsPage\n          clubs={currentClubs}\n          loading={loadingClubs || (isSignedIn && loadingFavs)}\n          isFavFinder={findIsFav}\n        />\n      </div>\n      <PaginationTab\n        clubsPerPage={clubsPerPage}\n        totalClubs={dynamicSearch().length}\n        paginate={paginate}\n      />\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx",["102","103"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport \"./Header.css\";\nimport { AuthContext, UserContext } from \"../../context/user\";\n\nfunction Header() {\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n\n  const [profile, setProfile] = useState(\"\");\n\n  useEffect(() => {\n    if (user && isSignedIn) {\n      setProfile(user.imageUrl);\n    }\n  }, [user]);\n\n  return (\n    <nav className=\"navbar sticky-top navbar-expand-lg navbar-light\">\n      <Link className=\"navbar-brand\" to=\"/clubs\">\n        Club View\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link active\" to=\"/clubs\">\n              Clubs\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={isSignedIn ? \"/clubs/add\" : \"/clubs\"}>\n              <Fab variant=\"extended\" size=\"medium\" disabled={!isSignedIn}>\n                <AddIcon className=\"classes.extendedIcon\" />\n                Add Club\n              </Fab>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={isSignedIn ? \"/profile/my\" : \"/profile/settings\"}>\n              <Fab size=\"medium\">\n                {isSignedIn ? (\n                  <img\n                    className=\"profile-picture\"\n                    src={profile}\n                    alt=\"profile-picture\"\n                  ></img>\n                ) : (\n                  <AccountCircleIcon />\n                )}\n              </Fab>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx",["104","105","106"],"/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx",["107"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Chip from \"@material-ui/core/Chip\";\nimport { AuthContext, UserContext } from \"../../context/user\";\nimport \"./Club.css\";\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nfunction Club(props) {\n  const infoLinkRoute = \"clubs/\" + props.id;\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n  const [status, setStatus] = useState({ message: \"\", color: \"gray\" });\n  const [isFav, setFav] = useState(props.isFav);\n\n  const nowMom = moment(new Date());\n  const startMom = moment(props.recruit.start);\n  const endMom = moment(props.recruit.end);\n\n  useEffect(() => {\n    renderTag();\n  }, [isFav]);\n\n  const handleFavClick = () => {\n    const notisFav = !isFav;\n    const clubid = props.id;\n    axios\n      .post(\n        \"https://clubview-server.herokuapp.com/profile/\" +\n          user.email +\n          \"/editfav\",\n        {\n          notisFav,\n          clubid,\n        }\n      )\n      .then((res) => console.log(res.data));\n    setFav(!isFav);\n  };\n\n  function renderTag() {\n    if (props.isAlwaysOpen) {\n      setStatus({ color: \"#C2e5aa\", message: \"OPEN\" });\n    } else {\n      const diff = startMom.diff(nowMom, \"days\");\n      if (diff < 10 && diff > 0) {\n        setStatus({ color: \"#FFF1BC\", message: \"INCOMING\" });\n      } else if (nowMom.isBetween(startMom, endMom, undefined, \"[]\")) {\n        setStatus({ color: \"#C2e5aa\", message: \"OPEN\" });\n      } else {\n        setStatus({ color: \"#FFBEAA\", message: \"CLOSED\" });\n      }\n    }\n  }\n\n  function renderDate() {\n    if (props.isAlwaysOpen) {\n      return \"Always open\";\n    }\n    return startMom.format(\"MM/DD\") + \" - \" + endMom.format(\"MM/DD\");\n  }\n\n  return (\n    <>\n      <div className=\"card mb-4\">\n        <div className=\"fav-icon-container\">\n          <Fab\n            className=\"fav-icon\"\n            onClick={handleFavClick}\n            aria-label=\"favorite\"\n            disabled={!isSignedIn}\n            size=\"small\"\n          >\n            {isFav ? (\n              <FavoriteIcon className=\"fav-icon-heart\" fontSize=\"small\" />\n            ) : (\n              <FavoriteBorderIcon className=\"fav-icon-heart\" fontSize=\"small\" />\n            )}\n          </Fab>\n        </div>\n        <Link to={infoLinkRoute}>\n          <div className=\"card-img-container\">\n            <img\n              className=\"card-img-top\"\n              src=\"./images/smallLong.png\"\n              alt=\"clubphoto\"\n            />\n            <p className=\"card-text\">{props.emoji}</p>\n          </div>\n        </Link>\n        <div className=\"card-body\">\n          <div className=\"d-flex\">\n            <Link to={infoLinkRoute}>\n              <p style={{ color: \"black\" }} className=\"clubName\">\n                {props.cname}\n              </p>\n            </Link>\n            <div className=\"ml-auto status-container\">\n              <Chip\n                label={status.message}\n                style={{ backgroundColor: status.color }}\n              />\n              {/* <span\n                className=\"status\"\n                style={{ backgroundColor: status.color }}\n              >\n                {status.message}\n              </span> */}\n            </div>\n          </div>\n          <p className=\"recDate\">{renderDate()}</p>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Club;\n","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx",["108"],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx",["109"],"import axios from \"axios\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext, UserContext } from \"../../../context/user\";\n\nimport { HangOut } from \"../../../images/index\";\nimport moment from \"moment\";\nimport \"./Content.css\";\n\nfunction Favs() {\n  const [favs, setFavs] = useState([]);\n  const { isSignedIn } = useContext(AuthContext);\n  const { user } = useContext(UserContext);\n\n  //TO-DO:\n  //Find out why database is giving empty arry for fav array\n\n  const fetchFavData = async () => {\n    if (isSignedIn && user != null) {\n      await axios\n        .get(\n          \"https://clubview-server.herokuapp.com/profile/favsFull/\" + user.email\n        )\n        .then((res) => setFavs(res.data))\n        .then(() => console.log(\"fetched favs\"));\n    }\n  };\n  useEffect(() => {\n    fetchFavData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"favs is now\", favs);\n  }, [favs]);\n\n  function renderFavs() {\n    // const header = [\n    //   \"Name\",\n    //   \"Rec. Start\",\n    //   \"Rec. End\",\n    //   \"Category\",\n    //   \"Notification\",\n    // ];\n    // const columns = [\"cname\", \"start\", \"end\", \"category\"];\n    const data = Array.from(favs);\n    if (data.length === 0) {\n      return (\n        <div>\n          <h4>You have no favorite clubs...</h4>\n          <img alt=\"hangout\" className=\"icon-noFavs\" src={HangOut} />\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"row mb-1\">\n            <div className=\"col-auto mr-auto\">\n              <h3>Favorites</h3>\n            </div>\n            <div className=\"col-auto\">\n              {/* <Fab variant=\"extended\" size=\"small\" onClick={generateFile(data)}>\n                <GetAppIcon className=\"classes.extendedIcon\" size=\"small\" />\n                Download .ics file\n              </Fab> */}\n            </div>\n          </div>\n          <div className=\"table-responsive scrollable\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Category</th>\n                  <th scope=\"col\">Rec. Start</th>\n                  <th scope=\"col\">Rec. End</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map(({ cname, start, end, category, isAlwaysOpen }) => {\n                  return (\n                    <tr>\n                      <td>{cname}</td>\n                      <td>{category}</td>\n                      <td>\n                        {isAlwaysOpen\n                          ? \"None\"\n                          : moment(start).format(\"MM/DD/YYYY\")}\n                      </td>\n                      <td>\n                        {isAlwaysOpen\n                          ? \"None\"\n                          : moment(end).format(\"MM/DD/YYYY\")}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </>\n      );\n    }\n  }\n\n  return <>{renderFavs()}</>;\n}\n\nexport default Favs;\n","/Users/aaronkang/Desktop/Clubview/client/src/images/index.js",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/ClubsPage/ClubsPage.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Pagination/Pagiation.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Footer/Footer.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Toast/Toast.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome/Welcome.jsx",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":19,"column":6,"nodeType":"116","endLine":19,"endColumn":8,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":37,"column":17,"nodeType":"120","endLine":37,"endColumn":67},{"ruleId":"114","severity":1,"message":"121","line":46,"column":6,"nodeType":"116","endLine":46,"endColumn":12,"suggestions":"122"},{"ruleId":"114","severity":1,"message":"123","line":19,"column":6,"nodeType":"116","endLine":19,"endColumn":12,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":54,"column":19,"nodeType":"120","endLine":58,"endColumn":20},{"ruleId":"127","severity":1,"message":"128","line":20,"column":22,"nodeType":"129","messageId":"130","endLine":20,"endColumn":24},{"ruleId":"114","severity":1,"message":"131","line":24,"column":6,"nodeType":"116","endLine":24,"endColumn":19,"suggestions":"132"},{"ruleId":"114","severity":1,"message":"133","line":46,"column":6,"nodeType":"116","endLine":46,"endColumn":8,"suggestions":"134"},{"ruleId":"114","severity":1,"message":"135","line":25,"column":6,"nodeType":"116","endLine":25,"endColumn":13,"suggestions":"136"},{"ruleId":"114","severity":1,"message":"137","line":26,"column":6,"nodeType":"116","endLine":26,"endColumn":8,"suggestions":"138"},{"ruleId":"114","severity":1,"message":"139","line":29,"column":6,"nodeType":"116","endLine":29,"endColumn":8,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["143"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchFavsData'. Either include it or remove the dependency array.",["144"],"React Hook useEffect has a missing dependency: 'isSignedIn'. Either include it or remove the dependency array.",["145"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.isEdit'. Either include it or remove the dependency array.",["146"],"React Hook useEffect has missing dependencies: 'club', 'getClubInfo', and 'props.isEdit'. Either include them or remove the dependency array.",["147"],"React Hook useEffect has a missing dependency: 'renderTag'. Either include it or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'fetchMyData'. Either include it or remove the dependency array.",["149"],"React Hook useEffect has a missing dependency: 'fetchFavData'. Either include it or remove the dependency array.",["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},"Update the dependencies array to be: [id]",{"range":"167","text":"168"},"Update the dependencies array to be: [fetchFavsData, user]",{"range":"169","text":"170"},"Update the dependencies array to be: [isSignedIn, user]",{"range":"171","text":"172"},"Update the dependencies array to be: [nameChecked, props.isEdit]",{"range":"173","text":"174"},"Update the dependencies array to be: [club, getClubInfo, props.isEdit]",{"range":"175","text":"176"},"Update the dependencies array to be: [isFav, renderTag]",{"range":"177","text":"178"},"Update the dependencies array to be: [fetchMyData]",{"range":"179","text":"180"},"Update the dependencies array to be: [fetchFavData]",{"range":"181","text":"182"},[574,576],"[id]",[1582,1588],"[fetchFavsData, user]",[601,607],"[isSignedIn, user]",[763,776],"[nameChecked, props.isEdit]",[1130,1132],"[club, getClubInfo, props.isEdit]",[910,917],"[isFav, renderTag]",[881,883],"[fetchMyData]",[833,835],"[fetchFavData]"]