[{"/Users/aaronkang/Desktop/Clubview/client/src/index.js":"1","/Users/aaronkang/Desktop/Clubview/client/src/components/App.js":"2","/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx":"3","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx":"4","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx":"5","/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx":"6","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx":"7","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx":"8","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx":"9","/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx":"10","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx":"11","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx":"12","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx":"13","/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx":"14","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx":"15","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx":"16","/Users/aaronkang/Desktop/Clubview/client/src/images/index.js":"17","/Users/aaronkang/Desktop/Clubview/client/src/components/ClubsPage/ClubsPage.jsx":"18","/Users/aaronkang/Desktop/Clubview/client/src/components/Pagination/Pagiation.jsx":"19","/Users/aaronkang/Desktop/Clubview/client/src/components/Footer/Footer.jsx":"20","/Users/aaronkang/Desktop/Clubview/client/src/components/Toast/Toast.jsx":"21","/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome/Welcome.jsx":"22"},{"size":164,"mtime":1622346534281,"results":"23","hashOfConfig":"24"},{"size":1704,"mtime":1626648904763,"results":"25","hashOfConfig":"24"},{"size":2204,"mtime":1626667620442,"results":"26","hashOfConfig":"24"},{"size":3719,"mtime":1626774341847,"results":"27","hashOfConfig":"24"},{"size":931,"mtime":1623844565537,"results":"28","hashOfConfig":"24"},{"size":2138,"mtime":1626772738192,"results":"29","hashOfConfig":"24"},{"size":12291,"mtime":1626820537494,"results":"30","hashOfConfig":"24"},{"size":3367,"mtime":1626826159173,"results":"31","hashOfConfig":"24"},{"size":138,"mtime":1623833010911,"results":"32","hashOfConfig":"24"},{"size":595,"mtime":1622717558232,"results":"33","hashOfConfig":"24"},{"size":679,"mtime":1623895183398,"results":"34","hashOfConfig":"24"},{"size":682,"mtime":1624436209287,"results":"35","hashOfConfig":"24"},{"size":1251,"mtime":1626774264464,"results":"36","hashOfConfig":"24"},{"size":605,"mtime":1624220427759,"results":"37","hashOfConfig":"24"},{"size":3024,"mtime":1626824987163,"results":"38","hashOfConfig":"24"},{"size":3065,"mtime":1626787846365,"results":"39","hashOfConfig":"24"},{"size":52,"mtime":1624436809131,"results":"40","hashOfConfig":"24"},{"size":836,"mtime":1626824632823,"results":"41","hashOfConfig":"24"},{"size":417,"mtime":1624481895110,"results":"42","hashOfConfig":"24"},{"size":397,"mtime":1626679823857,"results":"43","hashOfConfig":"24"},{"size":579,"mtime":1624570255959,"results":"44","hashOfConfig":"45"},{"size":745,"mtime":1626649151212,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"zxns19",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"49"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"49"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"49"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"49"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"49"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1jvlyo8",{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"/Users/aaronkang/Desktop/Clubview/client/src/index.js",[],["98","99"],"/Users/aaronkang/Desktop/Clubview/client/src/components/App.js",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx",["100","101"],"import React, { useEffect, useState } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport axios from \"axios\";\nimport \"./Clubinfo.css\";\nimport moment from \"moment\";\n\nfunction Clubinfo() {\n  const currentURL_string = window.location.href;\n  const id = currentURL_string.substring(\n    currentURL_string.lastIndexOf(\"/\") + 1\n  );\n\n  const [clubInfo, setclubinfo] = useState({});\n  useEffect(() => {\n    axios\n      .get(\"https://clubview-server.herokuapp.com/clubs/\" + id)\n      .then((res) => setclubinfo(res.data))\n      .catch((err) => console.log(err));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"container-fluid-add col-lg-7 col-md-12\">\n          <div className=\"content\" style={{ fontSize: \"220px\" }}>\n            {clubInfo.emoji}\n          </div>\n        </div>\n        <div\n          className=\"container-fluid-info col-lg-5 col-md-12\"\n          style={{ textAlign: \"left\" }}\n        >\n          <Paper className=\"club-paper\" elevation=\"3\">\n            <div>\n              <h2 className=\"first-row\">{clubInfo.cname}</h2>\n              <a href={clubInfo.site}>\n                <img className=\"svg\" src={`/assets/internet.svg`}></img>\n              </a>\n            </div>\n            <p>\n              <b>{clubInfo.category}</b>\n            </p>\n            {clubInfo.isAlwaysOpen ? (\n              <p>\n                <mark>Always open for new members</mark>\n              </p>\n            ) : (\n              <>\n                <p>\n                  Apps Open:{\" \"}\n                  <mark>\n                    <b>{moment(clubInfo.end).format(\"MMM Do YYYY h:m A\")}</b>\n                  </mark>\n                </p>\n                <p>\n                  Apps Close:{\" \"}\n                  <mark>\n                    <b>{moment(clubInfo.end).format(\"MMM Do YYYY h:m A\")}</b>\n                  </mark>\n                </p>\n              </>\n            )}\n            <p>{clubInfo.desc}</p>\n            <h6>\n              Learn more on their{\" \"}\n              <a href={clubInfo.site}>\n                <u>website</u>\n              </a>\n            </h6>\n          </Paper>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Clubinfo;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx",["102"],"import React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport \"./Dashboard.css\";\nimport ClubsPage from \"../ClubsPage/ClubsPage\";\nimport PaginationTab from \"../Pagination/Pagiation\";\nimport { AuthContext, UserContext } from \"../../context/user\";\nimport moment from \"moment\";\n\nfunction Dashboard() {\n  const [searchTerm, setSearch] = useState(\"\");\n  const [clubs, setClubs] = useState([]);\n  const [loadingClubs, setLoadingClubs] = useState(true);\n  const [loadingFavs, setLoadingFavs] = useState(true);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [clubsPerPage] = useState(8);\n  const [onlyOpen, setOnlyOpen] = useState(false);\n  const [favclubs, setFavClubs] = useState([]);\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n\n  const indexOfLastClub = currentPage * clubsPerPage;\n  const indexOfFirstClub = indexOfLastClub - clubsPerPage;\n  const currentClubs = dynamicSearch().slice(indexOfFirstClub, indexOfLastClub);\n\n  const fetchClubsData = async () => {\n    const res = await axios.get(\"https://clubview-server.herokuapp.com/clubs\");\n    setClubs(res.data);\n    setLoadingClubs(false);\n  };\n\n  const fetchFavsData = () => {\n    if (isSignedIn) {\n      axios\n        .get(\n          \"https://clubview-server.herokuapp.com/profile/favsID/\" + user.email\n        )\n        .then((res) => setFavClubs(res.data))\n        .then(() => setLoadingFavs(false));\n    }\n  };\n\n  useEffect(() => {\n    fetchFavsData();\n    fetchClubsData();\n    console.log(\"user in dashboard is \", user);\n  }, [user]);\n\n  function handleChange(event) {\n    const val = event.target.value;\n    setCurrentPage(1);\n    setSearch(val);\n    console.log(searchTerm);\n  }\n\n  function dynamicSearch() {\n    const result = clubs.filter((club) =>\n      club.cname.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    if (onlyOpen) {\n      return result.filter(\n        (club) =>\n          club.isAlwaysOpen ||\n          (moment(club.start).isBefore(new Date()) &&\n            moment(club.end).isAfter(new Date()))\n      );\n    }\n    return result;\n  }\n\n  // function handleSearch(event) {\n  //   console.log(searchTerm);\n  //   const sTerm = searchTerm.toLowerCase();\n  //   const c = clubs.find((club) => String(club.cname).toLowerCase() === sTerm);\n\n  //   if (c === undefined) {\n  //     alert(\"Club not found\");\n  //     setSearch(\"\");\n  //   } else {\n  //     window.location.href = \"/clubs/\" + c._id;\n  //   }\n  // }\n\n  function findIsFav(clubItem) {\n    return favclubs.includes(clubItem._id);\n  }\n\n  function paginate(pageNumber) {\n    setCurrentPage(pageNumber);\n  }\n\n  return (\n    <div>\n      <form className=\"form-inline\" style={{ padding: \"1%\" }}>\n        <input\n          className=\"form-control mr-sm-2\"\n          type=\"text\"\n          value={searchTerm}\n          onChange={handleChange}\n          placeholder=\"Search Club\"\n          aria-label=\"Search\"\n        />\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"checkbox\"\n            onClick={() => setOnlyOpen(!onlyOpen)}\n            checked={onlyOpen}\n            id=\"defaultCheck1\"\n          />\n          <label class=\"form-check-label\" for=\"defaultCheck1\">\n            Open Clubs Only\n          </label>\n        </div>\n      </form>\n      <div className=\"dashboard\">\n        <ClubsPage\n          clubs={currentClubs}\n          loading={loadingClubs || (isSignedIn && loadingFavs)}\n          isFavFinder={findIsFav}\n        />\n      </div>\n      <PaginationTab\n        clubsPerPage={clubsPerPage}\n        totalClubs={dynamicSearch().length}\n        paginate={paginate}\n      />\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx",["103","104"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport \"./Header.css\";\nimport { AuthContext, UserContext } from \"../../context/user\";\n\nfunction Header() {\n  const { user } = useContext(UserContext);\n  const { isSignedIn } = useContext(AuthContext);\n\n  const [profile, setProfile] = useState(\"\");\n\n  useEffect(() => {\n    if (user && isSignedIn) {\n      setProfile(user.imageUrl);\n    }\n  }, [user]);\n\n  return (\n    <nav className=\"navbar sticky-top navbar-expand-lg navbar-light\">\n      <Link className=\"navbar-brand\" to=\"/clubs\">\n        Club View\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link active\" to=\"/clubs\">\n              Clubs\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={isSignedIn ? \"/clubs/add\" : \"/clubs\"}>\n              <Fab variant=\"extended\" size=\"medium\" disabled={!isSignedIn}>\n                <AddIcon className=\"classes.extendedIcon\" />\n                Add Club\n              </Fab>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to={isSignedIn ? \"/profile/my\" : \"/profile/settings\"}>\n              <Fab size=\"medium\">\n                {isSignedIn ? (\n                  <img\n                    className=\"profile-picture\"\n                    src={profile}\n                    alt=\"profile-picture\"\n                  ></img>\n                ) : (\n                  <AccountCircleIcon />\n                )}\n              </Fab>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx",["105","106","107"],"import React, { useState, useEffect, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Paper from \"@material-ui/core/Paper\";\nimport moment from \"moment\";\nimport \"./AddArea.css\";\nimport { AuthContext, UserContext } from \"../../context/user\";\n\nfunction AddArea(props) {\n  const history = useHistory();\n  const [nameChecked, setChecked] = useState(false);\n  const { isSignedIn } = useContext(AuthContext);\n  const { user } = useContext(UserContext);\n  const currentURL_string = window.location.href;\n  const id = currentURL_string.substring(\n    currentURL_string.lastIndexOf(\"/\") + 1\n  );\n\n  useEffect(() => {\n    if (props.isEdit == true) {\n      setChecked(true);\n    }\n    console.log(nameChecked);\n  }, [nameChecked]);\n\n  const defaultClub = {\n    cname: \"\",\n    lead: \"\",\n    email: \"\",\n    category: \"\",\n    desc: \"\",\n    site: \"\",\n    start: \"\",\n    end: \"\",\n    emoji: \"💡\",\n    isAlwaysOpen: false,\n  };\n\n  const [club, setClub] = useState(defaultClub);\n\n  useEffect(() => {\n    if (props.isEdit === true) {\n      getClubInfo();\n      console.log(club);\n    }\n  }, []);\n\n  function getClubInfo() {\n    axios\n      .get(\"https://clubview-server.herokuapp.com/clubs/\" + id)\n      .then((res) => setClub(res.data))\n      .catch((err) => console.log(err));\n  }\n\n  function handleChange(event) {\n    console.log(club);\n    let { name, value } = event.target;\n\n    if (name === \"cname\") {\n      setChecked(false);\n    }\n\n    setClub((prevClub) => {\n      return {\n        ...prevClub,\n        [name]: value,\n      };\n    });\n  }\n\n  function handleClick(event) {\n    let { checked } = event.target;\n    setClub((prevClub) => {\n      return {\n        ...prevClub,\n        isAlwaysOpen: checked,\n      };\n    });\n  }\n\n  function submitClub(event) {\n    if (inValidInputs()) {\n      event.preventDefault();\n    } else {\n      axios\n        .post(\n          props.isEdit === false\n            ? \"https://clubview-server.herokuapp.com/clubs/add\"\n            : \"https://clubview-server.herokuapp.com/clubs/update/\" +\n                id +\n                \"/\" +\n                user.email,\n          club\n        )\n        .then((res) => {\n          history.push(`/clubs`);\n          alert(res.data);\n        })\n        .catch((err) => console.log(err));\n    }\n    event.preventDefault();\n  }\n\n  function checkName() {\n    const trimmed = club.cname.trim();\n    if (trimmed.length === 0) {\n      alert(\"Enter name\");\n    } else {\n      axios\n        .get(\"https://clubview-server.herokuapp.com/clubs/check/\" + trimmed)\n        .then((res) => {\n          setChecked(res.data);\n          if (res.data === true) {\n            alert(\"Name is available.\");\n          } else {\n            alert(\"Name is unavailable.\");\n          }\n        });\n    }\n  }\n\n  function inValidInputs() {\n    let Amessage = \"\";\n\n    if (!isSignedIn) {\n      alert(\"Please sign in.\");\n      return true;\n    }\n\n    if (\n      club.cname === \"\" ||\n      club.lead === \"\" ||\n      club.email === \"\" ||\n      club.category === \"\" ||\n      club.desc === \"\"\n    ) {\n      Amessage += \"Please fill in all required slots. \\n\";\n    }\n\n    if (!club.isAlwaysOpen && (club.start === \"\" || club.start === \"\")) {\n      Amessage += \"Please enter recruitment information. \\n\";\n    }\n\n    if (!nameChecked) {\n      Amessage += \"Please check name availability. \\n\";\n    }\n    if (!club.isAlwaysOpen && moment(club.end).isBefore(club.start)) {\n      Amessage += \"Make sure End date is after Start date.\";\n    }\n    if (Amessage === \"\") {\n      return false;\n    } else {\n      alert(Amessage);\n      return true;\n    }\n  }\n\n  return (\n    <>\n      <section className=\"mb-4\">\n        <div className=\"row add-Area\">\n          <div className=\"container-fluid-add col-lg-5 col-md-12\">\n            <h4>Choose an emoji!</h4>\n            <p>that best represents your club</p>\n            <div className=\"content\">{club.emoji}</div>\n          </div>\n\n          <Paper\n            className=\"container-fluid-add col-lg-7 col-md-12 add-form\"\n            elevation=\"3\"\n          >\n            <h4>Club Information</h4>\n            <form>\n              <div className=\"form-row\">\n                <div\n                  className=\"form-group col-md-7\"\n                  style={{ textAlign: \"left\" }}\n                >\n                  <label for=\"cName_\">Club Name*</label>\n                  <div className=\"input-group\">\n                    <input\n                      disabled={props.isEdit}\n                      name=\"cname\"\n                      type=\"text\"\n                      placeholder=\"Club Name\"\n                      className=\"form-control\"\n                      id=\"cName_\"\n                      onChange={handleChange}\n                      value={club.cname}\n                      required\n                    />\n                    <div class=\"input-group-append\">\n                      <button\n                        disabled={props.isEdit}\n                        class=\"input-group-text\"\n                        type=\"button\"\n                        onClick={checkName}\n                      >\n                        Check\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className=\"form-group col-md-5\"\n                  style={{ textAlign: \"left\" }}\n                >\n                  <label for=\"category\">Club Category*</label>\n                  <select\n                    name=\"category\"\n                    placeholder=\"Category\"\n                    className=\"form-control\"\n                    id=\"category\"\n                    onChange={handleChange}\n                    value={club.category}\n                    required\n                  >\n                    <option> </option>\n                    <option>Academic and Educational</option>\n                    <option>Community Service</option>\n                    <option>Media and Publication</option>\n                    <option>Political or Multicultural</option>\n                    <option>Recreation and Sports</option>\n                    <option>Religious and Spiritual</option>\n                    <option>Student Government</option>\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div\n                  className=\"form-group col-md-6\"\n                  style={{ textAlign: \"left\" }}\n                >\n                  <label for=\"cLead\">Lead Name(s)*</label>\n                  <input\n                    name=\"lead\"\n                    type=\"text\"\n                    placeholder=\"Lead Names\"\n                    className=\"form-control\"\n                    id=\"cLead\"\n                    onChange={handleChange}\n                    value={club.lead}\n                    required\n                  />\n                </div>\n                <div\n                  className=\"form-group col-md-6\"\n                  style={{ textAlign: \"left\" }}\n                >\n                  <label for=\"email\">Manager e-mail*</label>\n\n                  <div className=\"input-group\">\n                    <input\n                      name=\"email\"\n                      type=\"text\"\n                      placeholder=\"E-mail\"\n                      className=\"form-control\"\n                      id=\"email\"\n                      onChange={handleChange}\n                      aria-describedby=\"emailHelp\"\n                      value={club.email}\n                      required\n                    />\n                    <div class=\"input-group-append\">\n                      <span class=\"input-group-text\" id=\"inputGroupPrepend2\">\n                        @cornell.edu\n                      </span>\n                    </div>\n                  </div>\n                  <small id=\"emailHelp\" class=\"form-text text-muted\">\n                    Person logged in with this email will be able to edit/delete\n                    club information.\n                  </small>\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div\n                  className=\"form-group col-md-12\"\n                  style={{ textAlign: \"left\" }}\n                >\n                  <label for=\"clubDesc\">Description of the Club*</label>\n                  <textarea\n                    className=\"form-control\"\n                    name=\"desc\"\n                    placeholder=\"Tell us what your club is all about\"\n                    id=\"clubDesc\"\n                    rows=\"3\"\n                    onChange={handleChange}\n                    value={club.desc}\n                    required\n                  ></textarea>\n                </div>\n              </div>\n\n              <div className=\"form-row\">\n                <div\n                  className=\"form-group col-md-11 col-sm-11 \"\n                  style={{ textAlign: \"left\" }}\n                >\n                  <label for=\"clubSite\">Website/Social Media Link</label>\n                  <input\n                    name=\"site\"\n                    type=\"url\"\n                    placeholder=\"Link\"\n                    className=\"form-control\"\n                    id=\"clubSite\"\n                    onChange={handleChange}\n                    value={club.site}\n                  />\n                </div>\n                <div className=\"form-group col-md-1 col-sm-1\">\n                  <label for=\"emo\">emoji:</label>\n\n                  <input\n                    name=\"emoji\"\n                    id=\"emo\"\n                    type=\"text\"\n                    className=\"input-styling form-control mx-auto\"\n                    onChange={handleChange}\n                    value={club.emoji}\n                    maxLength=\"3\"\n                    required\n                  />\n                </div>\n              </div>\n\n              <div className=\"form-row\" style={{ paddingLeft: \"5px\" }}>\n                <div className=\"form-group\" style={{ textAlign: \"left\" }}>\n                  <label for=\"RecruitmentPeriod\">\n                    Recruitment Period*\n                    <div class=\"form-check form-check-inline ml-1\">\n                      <input\n                        name=\"isAlwaysOpen\"\n                        class=\"form-check-input\"\n                        checked={club.isAlwaysOpen}\n                        type=\"checkbox\"\n                        onChange={handleClick}\n                        id=\"defaultCheck1\"\n                      />\n                      <label class=\"form-check-label\" for=\"defaultCheck1\">\n                        Always open\n                      </label>\n                    </div>\n                  </label>\n\n                  <div id=\"RecruitmentPeriod\">\n                    <div className=\"form-row\">\n                      <div className=\"form-group col-6\">\n                        <input\n                          name=\"start\"\n                          className=\"form-control\"\n                          type=\"datetime-local\"\n                          id=\"startDate\"\n                          onChange={handleChange}\n                          value={club.start.substring(0, 16)}\n                          required={!club.isAlwaysOpen}\n                          disabled={club.isAlwaysOpen}\n                        />\n                      </div>\n                      <div className=\"form-group col-6\">\n                        <input\n                          name=\"end\"\n                          className=\"form-control\"\n                          type=\"datetime-local\"\n                          placeholder=\"End Date\"\n                          id=\"endDate\"\n                          onChange={handleChange}\n                          value={club.end.substring(0, 16)}\n                          disabled={club.isAlwaysOpen}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <button\n                type=\"button\"\n                onClick={submitClub}\n                className=\"btn btn-primary\"\n              >\n                {props.isEdit ? \"Update\" : \"Submit\"}\n              </button>\n            </form>\n          </Paper>\n        </div>\n      </section>\n    </>\n  );\n}\n\nexport default AddArea;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx",["108"],"/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Sidebar/Sidebar.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/LogInOut/LogInOut.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Login.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/GoogleAuth/Logout.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/MyClubs.jsx",["109"],"import axios from \"axios\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext, UserContext } from \"../../../context/user\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { HangOut } from \"../../../images/index\";\nimport \"./Content.css\";\n\nfunction MyClubs() {\n  const { isSignedIn } = useContext(AuthContext);\n  const { user } = useContext(UserContext);\n  const [deleted, setDeleted] = useState(false);\n  const [my, setMy] = useState([]);\n\n  const fetchMyData = async () => {\n    if (isSignedIn && user != null) {\n      await axios\n        .get(\"https://clubview-server.herokuapp.com/profile/my/\" + user.email)\n        .then((res) => setMy(res.data))\n        .then(() => console.log(\"fetched favs\"));\n    }\n  };\n  useEffect(() => {\n    fetchMyData();\n  }, [deleted]);\n\n  const handleDelete = (_id) => {\n    axios\n      .delete(\n        \"https://clubview-server.herokuapp.com/profile/\" +\n          _id +\n          \"/\" +\n          user.email\n      )\n      .then((res) => alert(res.data))\n      .then(() => setDeleted(true));\n  };\n\n  function renderMy() {\n    const data = Array.from(my);\n    if (data.length === 0) {\n      return (\n        <div>\n          <h4>You own no clubs...</h4>\n          <img alt=\"hangout\" className=\"icon-noFavs\" src={HangOut} />\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"mb-1\">\n            <h3 className=\"title\">My Clubs</h3>\n          </div>\n          <div className=\"table-responsive scrollable\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Category</th>\n                  <th scope=\"col\">Edit</th>\n                  <th scope=\"col\">Delete</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map(({ _id, cname, category }) => {\n                  return (\n                    <tr>\n                      <td>{cname}</td>\n                      <td>{category}</td>\n                      <td>\n                        <Link to={\"edit/\" + _id}>\n                          <Fab size=\"small\">\n                            <EditIcon fontSize=\"small\" />\n                          </Fab>\n                        </Link>\n                      </td>\n                      <td>\n                        <Fab\n                          size=\"small\"\n                          onClick={() => {\n                            handleDelete(_id);\n                          }}\n                        >\n                          <DeleteIcon fontSize=\"small\" />\n                        </Fab>\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </>\n      );\n    }\n  }\n\n  return <>{renderMy()}</>;\n}\n\nexport default MyClubs;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Content/Favorites.jsx",["110"],"import axios from \"axios\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { AuthContext, UserContext } from \"../../../context/user\";\n\nimport { HangOut } from \"../../../images/index\";\nimport moment from \"moment\";\nimport \"./Content.css\";\n\nfunction Favs() {\n  const [favs, setFavs] = useState([]);\n  const { isSignedIn } = useContext(AuthContext);\n  const { user } = useContext(UserContext);\n\n  //TO-DO:\n  //Find out why database is giving empty arry for fav array\n\n  const fetchFavData = async () => {\n    if (isSignedIn && user != null) {\n      await axios\n        .get(\n          \"https://clubview-server.herokuapp.com/profile/favsFull/\" + user.email\n        )\n        .then((res) => setFavs(res.data))\n        .then(() => console.log(\"fetched favs\"));\n    }\n  };\n  useEffect(() => {\n    fetchFavData();\n  }, []);\n\n  useEffect(() => {\n    console.log(\"favs is now\", favs);\n  }, [favs]);\n\n  function renderFavs() {\n    // const header = [\n    //   \"Name\",\n    //   \"Rec. Start\",\n    //   \"Rec. End\",\n    //   \"Category\",\n    //   \"Notification\",\n    // ];\n    // const columns = [\"cname\", \"start\", \"end\", \"category\"];\n    const data = Array.from(favs);\n    if (data.length === 0) {\n      return (\n        <div>\n          <h4>You have no favorite clubs...</h4>\n          <img alt=\"hangout\" className=\"icon-noFavs\" src={HangOut} />\n        </div>\n      );\n    } else {\n      return (\n        <>\n          <div className=\"row mb-1\">\n            <div className=\"col-auto mr-auto\">\n              <h3>Favorites</h3>\n            </div>\n            <div className=\"col-auto\">\n              {/* <Fab variant=\"extended\" size=\"small\" onClick={generateFile(data)}>\n                <GetAppIcon className=\"classes.extendedIcon\" size=\"small\" />\n                Download .ics file\n              </Fab> */}\n            </div>\n          </div>\n          <div className=\"table-responsive scrollable\">\n            <table className=\"table table-striped\">\n              <thead>\n                <tr>\n                  <th scope=\"col\">Name</th>\n                  <th scope=\"col\">Category</th>\n                  <th scope=\"col\">Rec. Start</th>\n                  <th scope=\"col\">Rec. End</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map(({ cname, start, end, category, isAlwaysOpen }) => {\n                  return (\n                    <tr>\n                      <td>{cname}</td>\n                      <td>{category}</td>\n                      <td>\n                        {isAlwaysOpen\n                          ? \"None\"\n                          : moment(start).format(\"MM/DD/YYYY\")}\n                      </td>\n                      <td>\n                        {isAlwaysOpen\n                          ? \"None\"\n                          : moment(end).format(\"MM/DD/YYYY\")}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </>\n      );\n    }\n  }\n\n  return <>{renderFavs()}</>;\n}\n\nexport default Favs;\n","/Users/aaronkang/Desktop/Clubview/client/src/images/index.js",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/ClubsPage/ClubsPage.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Pagination/Pagiation.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Footer/Footer.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Toast/Toast.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome/Welcome.jsx",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":19,"column":6,"nodeType":"117","endLine":19,"endColumn":8,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":37,"column":17,"nodeType":"121","endLine":37,"endColumn":67},{"ruleId":"115","severity":1,"message":"122","line":46,"column":6,"nodeType":"117","endLine":46,"endColumn":12,"suggestions":"123"},{"ruleId":"115","severity":1,"message":"124","line":19,"column":6,"nodeType":"117","endLine":19,"endColumn":12,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":54,"column":19,"nodeType":"121","endLine":58,"endColumn":20},{"ruleId":"128","severity":1,"message":"129","line":20,"column":22,"nodeType":"130","messageId":"131","endLine":20,"endColumn":24},{"ruleId":"115","severity":1,"message":"132","line":24,"column":6,"nodeType":"117","endLine":24,"endColumn":19,"suggestions":"133"},{"ruleId":"115","severity":1,"message":"134","line":46,"column":6,"nodeType":"117","endLine":46,"endColumn":8,"suggestions":"135"},{"ruleId":"115","severity":1,"message":"136","line":25,"column":6,"nodeType":"117","endLine":25,"endColumn":13,"suggestions":"137"},{"ruleId":"115","severity":1,"message":"138","line":27,"column":6,"nodeType":"117","endLine":27,"endColumn":15,"suggestions":"139"},{"ruleId":"115","severity":1,"message":"140","line":29,"column":6,"nodeType":"117","endLine":29,"endColumn":8,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["144"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'fetchFavsData'. Either include it or remove the dependency array.",["145"],"React Hook useEffect has a missing dependency: 'isSignedIn'. Either include it or remove the dependency array.",["146"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.isEdit'. Either include it or remove the dependency array.",["147"],"React Hook useEffect has missing dependencies: 'club', 'getClubInfo', and 'props.isEdit'. Either include them or remove the dependency array.",["148"],"React Hook useEffect has a missing dependency: 'renderTag'. Either include it or remove the dependency array.",["149"],"React Hook useEffect has a missing dependency: 'fetchMyData'. Either include it or remove the dependency array.",["150"],"React Hook useEffect has a missing dependency: 'fetchFavData'. Either include it or remove the dependency array.",["151"],"no-global-assign","no-unsafe-negation",{"desc":"152","fix":"153"},{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},"Update the dependencies array to be: [id]",{"range":"168","text":"169"},"Update the dependencies array to be: [fetchFavsData, user]",{"range":"170","text":"171"},"Update the dependencies array to be: [isSignedIn, user]",{"range":"172","text":"173"},"Update the dependencies array to be: [nameChecked, props.isEdit]",{"range":"174","text":"175"},"Update the dependencies array to be: [club, getClubInfo, props.isEdit]",{"range":"176","text":"177"},"Update the dependencies array to be: [isFav, renderTag]",{"range":"178","text":"179"},"Update the dependencies array to be: [deleted, fetchMyData]",{"range":"180","text":"181"},"Update the dependencies array to be: [fetchFavData]",{"range":"182","text":"183"},[574,576],"[id]",[1582,1588],"[fetchFavsData, user]",[601,607],"[isSignedIn, user]",[763,776],"[nameChecked, props.isEdit]",[1130,1132],"[club, getClubInfo, props.isEdit]",[910,917],"[isFav, renderTag]",[930,939],"[deleted, fetchMyData]",[833,835],"[fetchFavData]"]