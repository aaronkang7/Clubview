[{"/Users/aaronkang/Desktop/Clubview/client/src/index.js":"1","/Users/aaronkang/Desktop/Clubview/client/src/components/App.js":"2","/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome.jsx":"3","/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx":"4","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx":"5","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx":"6","/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx":"7","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx":"8","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx":"9","/Users/aaronkang/Desktop/Clubview/client/src/components/LogInOut/Login.jsx":"10","/Users/aaronkang/Desktop/Clubview/client/src/components/LogInOut/Logout.jsx":"11"},{"size":164,"mtime":1622346534281,"results":"12","hashOfConfig":"13"},{"size":1239,"mtime":1622421339832,"results":"14","hashOfConfig":"13"},{"size":557,"mtime":1622346534281,"results":"15","hashOfConfig":"13"},{"size":1256,"mtime":1622420134508,"results":"16","hashOfConfig":"13"},{"size":2925,"mtime":1622420092568,"results":"17","hashOfConfig":"13"},{"size":215,"mtime":1622710377190,"results":"18","hashOfConfig":"13"},{"size":1334,"mtime":1622697559412,"results":"19","hashOfConfig":"13"},{"size":5752,"mtime":1622420040554,"results":"20","hashOfConfig":"13"},{"size":1830,"mtime":1622420106859,"results":"21","hashOfConfig":"13"},{"size":687,"mtime":1622711302148,"results":"22","hashOfConfig":"13"},{"size":513,"mtime":1622706835282,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"zxns19",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/Users/aaronkang/Desktop/Clubview/client/src/index.js",[],["50","51"],"/Users/aaronkang/Desktop/Clubview/client/src/components/App.js",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx",["52"],"import React, {useState, useEffect} from \"react\";\nimport Club from \"../Club/Club\";\nimport axios from \"axios\";\nimport \"./Dashboard.css\";\n\nfunction Dashboard(){\n\n  const [searchTerm, setSearch] = useState(\"\");\n  const [clubs, setClubs] = useState([]);\n  \n\n  const fetchData = async ()=> {\n    await axios.get(\"https://clubview-server.herokuapp.com/clubs\")\n      .then(res =>setClubs(res.data))\n      .catch(err => console.log(err));\n  }\n\n  useEffect(()=>{\n    fetchData();\n  }, [])\n\n\n  function handleChange(event){\n    const val = event.target.value;\n    setSearch(val);\n    console.log(searchTerm);\n  }\n\n  function handleSearch(event){\n    console.log(searchTerm);\n    const sTerm = searchTerm.toLowerCase();\n    const c= clubs.find(club => (String(club.cname).toLowerCase() == sTerm));\n    \n    if (c===undefined){\n      alert(\"Club not found\");\n      setSearch(\"\");\n    } else{\n      window.location.href= \"/clubs/\"+c._id;\n    }\n  }\n\n\n\n  function compareTime(startDate,dueDate){ \n\n     var ifrecriuting = (new Date(startDate).getTime() <= new Date().getTime()) && \n                         (new Date().getTime() <= new Date(dueDate).getTime());\n\n    const diffTime = new Date(startDate).getTime() - new Date().getTime();\n    const over = 0>(new Date(dueDate).getTime() - new Date().getTime());\n    const diffHours = Math.round(diffTime / (1000 * 60 * 60)); \n\n    if (ifrecriuting){\n      return (\n        [\"Applications open\", \"#93e4aa\"]\n      )\n    } else if (0< diffHours && diffHours<=168){\n      return(\n        [\"Opening soon (<7days)\", \"#f7f46f\"]\n      )\n    } else if (over){\n      const endString = dueDate.substring(0,10);\n      return([\"Applications closed on: \"+endString, \"#f99487\"])\n    }\n    else{\n      const startString = startDate.substring(0,10);\n      return([\"Opening on: \"+ startString, \"#d3d3d3\"])\n    }\n  }\n\n  function clubList(){\n    return (clubs.map((clubItem)=> {\n      return (\n            \n                <Club\n                  key = {clubItem._id}\n                  id = {clubItem._id}\n                  cname={clubItem.cname}\n                  lead ={clubItem.lead}\n                  email ={clubItem.email}\n                  category = {clubItem.category}\n                  desc ={clubItem.desc}\n                  site ={clubItem.site}\n                  emoji ={clubItem.emoji}\n                  recruit ={compareTime(clubItem.start,clubItem.end)}\n                />\n        )\n      })\n    )}\n\n  \n\n  return (\n   <div>\n      <form className=\"form-inline\" style={{padding: \"1%\"}}>\n          <input className=\"form-control mr-sm-2\" type=\"text\" value={searchTerm} \n         onChange={handleChange} placeholder=\"Search Club\" aria-label=\"Search\" />\n          <button type=\"button\" onClick={handleSearch} className=\"btn btn-outline-danger my-2 my-sm-0\">Search</button>\n        </form>\n        <div className=\"dashboard\">\n      {clubList()}\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard;","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx",["53","54","55","56","57","58","59","60","61","62","63"],"import React, {useState,useEffect} from \"react\";\nimport axios from \"axios\";\nimport \"./AddArea.css\";\n\nfunction AddArea(props){\n  const isEdit = props.isEdit;\n  const currentURL_string = window.location.href;\n  const id = currentURL_string.substring(currentURL_string.lastIndexOf(\"/\")+1);\n\n  const [club, setClub] = useState({\n    cname: \"\",\n    lead: \"\",\n    email: \"\",\n    category: \"                        \",\n    desc: \"\",\n    site: \"\",\n    start: \"\",\n    end: \"\",\n    emoji: \"ðŸ’¡\"\n  });\n\n  useEffect(()=>{\n    if (props.isEdit==true){\n      getClubInfo();\n      console.log(club);\n    }\n  },[]);\n\n  function getClubInfo(){\n    axios.get(\"https://clubview-server.herokuapp.com/clubs/\"+id)\n      .then(res=>setClub(res.data))\n      .catch(err=> console.log(err));\n  }\n\n\n  function handleChange(event){\n    let {name, value} = event.target;\n    setClub(prevClub => {\n      console.log(prevClub);\n      return {\n        ...prevClub,\n        [name]: value\n      }\n    });\n  }\n\n  function stillEmpty(){\n    return (club.cname==\"\" ||club.lead==\"\" || club.email ==\"\" ||\n    club.category ==\"                        \" || club.desc==\"\" || club.start==\"\" || club.end==\"\")\n  }\n\n  function submitClub(event) {\n    if (stillEmpty()){alert(\"Please fill in all required sections\");event.preventDefault();}\n    else{\n      if (props.isEdit==false){\n      alert(\"Club Add successful.\")\n      axios.post(\"https://clubview-server.herokuapp.com/clubs/add\",club)\n        .then(res =>console.log(res.data))\n        .catch(err=> console.log(err));\n    } else{\n      alert(\"Club Infomration Updated!!!!! \");\n      axios.post(\"https://clubview-server.herokuapp.com/clubs/update/\"+id,club)\n        .then(res=>console.log(res.data))\n        .catch(err=> console.log(err));\n    } \n  }\n  event.preventDefault();\n  }\n\n  return (\n    <section>\n      <form className=\"needs-validation\" noValidate>\n        <div className=\"row add-Area\">\n          <div className=\"container-fluid-add col-lg-5 col-md-12\">\n            <h4>Choose an emoji!</h4>\n            <p>that best represents your club</p>\n              <div className=\"content\">\n                {club.emoji}\n              </div>\n              <input name=\"emoji\" type=\"text\" \n              className=\"input-styling form-control mx-auto\" onChange ={handleChange} value={club.emoji} maxLength=\"3\" required />\n          </div>\n\n          <div className=\"container-fluid-add col-lg-7 col-md-12\">\n            <h4>Club Information</h4>\n\n            <div className=\"form-group row\">\n              <label for=\"cName_\">Club Name*</label>\n              <input name=\"cname\" type=\"text\" className=\"form-control\" id=\"cName_\" onChange ={handleChange} value={club.cname} required />\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"cLead\">Club Lead Name(s)*</label>\n              <input name=\"lead\" type=\"text\" className=\"form-control\" id=\"cLead\" onChange ={handleChange} value={club.lead} required />\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"email\">Club Lead e-mail*</label>\n              <div className=\"input-group\">\n                <input name=\"email\" type=\"text\" className=\"form-control\" id=\"email\" onChange ={handleChange} aria-describedby=\"emailHelp\" value={club.email} required />\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"category\">Club Category*</label>\n              <select name=\"category\" className=\"form-control\" id=\"category\" onChange ={handleChange} value={club.category} required>\n                <option>                        </option>\n                <option>Academic and Educational</option>\n                <option>Community service</option>\n                <option>Media and Publication</option>\n                <option>Political or multicultural</option>\n                <option>Recreation and sports</option>\n                <option>Religious and spiritual</option>\n                <option>Student government</option>\n              </select>\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"clubDesc\">Description of the Club*</label>\n              <textarea className=\"form-control\" name=\"desc\" id=\"clubDesc\" rows=\"3\" onChange ={handleChange} value={club.desc} required></textarea>\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"clubSite\">Website/Social Media Link</label>\n              <input name=\"site\" type=\"url\" className=\"form-control\" id=\"clubSite\" onChange ={handleChange} value={club.site} required />\n            </div>\n\n            <div className=\"row\">\n              <label for=\"RecruitmentPeriod\">Recruitment Period*</label>\n              <div id=\"RecruitmentPeriod\">\n                <div className=\"row\">\n                  <div className=\"form-group col\">\n                    <div className=\"col-10\">\n                      <input name= \"start\" className=\"form-control\" type=\"datetime-local\" id=\"startDate\" onChange ={handleChange} value={club.start} required />\n                    </div>\n                  </div>\n                  <div className=\"form-group col\">\n                    <div className=\"col-10\">\n                      <input name= \"end\" className=\"form-control\" type=\"datetime-local\" placeholder=\"End Date\" id=\"startDate\" onChange ={handleChange} value={club.end} required />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button type=\"button\" onClick ={submitClub} className=\"btn btn-primary\" style={{textAlign:\"right\"}}>{props.isEdit ? \"Update\" : \"Submit\"}</button>\n\n          </div>\n        </div>\n      </form>\n    </section>\n  )\n}\n\nexport default AddArea;","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx",["64","65"],"import React, { useEffect, useState } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport $ from \"jquery\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport Fab from '@material-ui/core/Fab'\nimport \"./Club.css\"\n\n\n\nfunction Club(props){\n\n  useEffect(() => {\n    $(\".card\").on(\"mouseenter\", function() {\n      $(this).addClass('shadow-lg').css('cursor', 'pointer'); \n    }).on(\"mouseleave\", function() {\n      $(this).removeClass('shadow-lg');});\n    }\n  );\n\n  const infoLinkRoute= \"clubs/\" + props.id;\n  const editLinkRoute = \"edit/\" + props.id;\n  const [isFav, setFav] = useState(false);\n\n\n  const statusInd = {\n    height: \"17px\",\n    width: \"17px\",\n    backgroundColor: props.recruit[1],\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n    float:\"left\",\n    zIndex: \"2\"\n  }\n\n  return(\n    <>\n    <div className=\"card mb-4\">\n      <div className=\"edit-icon-container\">\n        <Fab className=\"edit-icon\" onClick= {() => {setFav(!isFav)}} aria-label=\"favorite\" size=\"small\">\n           {isFav ? <FavoriteIcon className=\"edit-icon-heart\" fontSize=\"small\" /> : <FavoriteBorderIcon className=\"edit-icon-heart\" fontSize=\"small\" /> }\n        </Fab>\n      </div>\n      <Link to={infoLinkRoute}>\n        <div class=\"card-img-container\">\n          <img class=\"card-img-top\" src=\"./images/smallLong.png\" alt=\"Card image cap\" />\n          <p class=\"card-text\">{props.emoji}</p>\n        </div>\n      </Link>\n        <div className=\"card-body\">\n        <Link to={infoLinkRoute}>\n            <h4 style={{color:\"black\"}}>{props.cname}</h4>\n          </Link>\n            <span style= {statusInd}></span>\n            <p className=\"card-text\">\n            {props.recruit[0]}\n            </p>\n        </div>\n    </div>\n    </>\n  )\n}\n\nexport default Club;","/Users/aaronkang/Desktop/Clubview/client/src/components/LogInOut/Login.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/LogInOut/Logout.jsx",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":32,"column":67,"nodeType":"72","messageId":"73","endLine":32,"endColumn":69},{"ruleId":"74","severity":1,"message":"75","line":6,"column":9,"nodeType":"76","messageId":"77","endLine":6,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":23,"column":21,"nodeType":"72","messageId":"73","endLine":23,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":27,"column":5,"nodeType":"80","endLine":27,"endColumn":7,"suggestions":"81"},{"ruleId":"70","severity":1,"message":"71","line":48,"column":23,"nodeType":"72","messageId":"73","endLine":48,"endColumn":25},{"ruleId":"70","severity":1,"message":"71","line":48,"column":39,"nodeType":"72","messageId":"73","endLine":48,"endColumn":41},{"ruleId":"70","severity":1,"message":"71","line":48,"column":58,"nodeType":"72","messageId":"73","endLine":48,"endColumn":60},{"ruleId":"70","severity":1,"message":"71","line":49,"column":19,"nodeType":"72","messageId":"73","endLine":49,"endColumn":21},{"ruleId":"70","severity":1,"message":"71","line":49,"column":60,"nodeType":"72","messageId":"73","endLine":49,"endColumn":62},{"ruleId":"70","severity":1,"message":"71","line":49,"column":78,"nodeType":"72","messageId":"73","endLine":49,"endColumn":80},{"ruleId":"70","severity":1,"message":"71","line":49,"column":94,"nodeType":"72","messageId":"73","endLine":49,"endColumn":96},{"ruleId":"70","severity":1,"message":"71","line":55,"column":23,"nodeType":"72","messageId":"73","endLine":55,"endColumn":25},{"ruleId":"74","severity":1,"message":"82","line":22,"column":9,"nodeType":"76","messageId":"77","endLine":22,"endColumn":22},{"ruleId":"83","severity":1,"message":"84","line":46,"column":11,"nodeType":"85","endLine":46,"endColumn":89},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'isEdit' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'club', 'getClubInfo', and 'props.isEdit'. Either include them or remove the dependency array.","ArrayExpression",["88"],"'editLinkRoute' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},"Update the dependencies array to be: [club, getClubInfo, props.isEdit]",{"range":"91","text":"92"},[593,595],"[club, getClubInfo, props.isEdit]"]