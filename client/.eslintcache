[{"/Users/aaronkang/Desktop/Clubview/client/src/index.js":"1","/Users/aaronkang/Desktop/Clubview/client/src/components/App.js":"2","/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome.jsx":"3","/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx":"4","/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx":"5","/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx":"6","/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx":"7","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx":"8","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx":"9","/Users/aaronkang/Desktop/Clubview/client/src/components/LogInOut/Login.jsx":"10","/Users/aaronkang/Desktop/Clubview/client/src/components/LogInOut/Logout.jsx":"11","/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx":"12","/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx":"13"},{"size":164,"mtime":1622346534281,"results":"14","hashOfConfig":"15"},{"size":1451,"mtime":1623751593739,"results":"16","hashOfConfig":"15"},{"size":557,"mtime":1622346534281,"results":"17","hashOfConfig":"15"},{"size":1256,"mtime":1622420134508,"results":"18","hashOfConfig":"15"},{"size":2878,"mtime":1622721946771,"results":"19","hashOfConfig":"15"},{"size":610,"mtime":1623741033892,"results":"20","hashOfConfig":"15"},{"size":1846,"mtime":1622883690422,"results":"21","hashOfConfig":"15"},{"size":7281,"mtime":1622721960724,"results":"22","hashOfConfig":"15"},{"size":1598,"mtime":1622766788101,"results":"23","hashOfConfig":"15"},{"size":1246,"mtime":1623751407062,"results":"24","hashOfConfig":"15"},{"size":605,"mtime":1623749990362,"results":"25","hashOfConfig":"15"},{"size":88,"mtime":1623749351627,"results":"26","hashOfConfig":"15"},{"size":595,"mtime":1622717558232,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"zxns19",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/aaronkang/Desktop/Clubview/client/src/index.js",[],["58","59"],"/Users/aaronkang/Desktop/Clubview/client/src/components/App.js",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Welcome.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Clubinfo/Clubinfo.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Dashboard/Dashboard.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Profile/Profile.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/components/Header/Header.jsx",["60"],"import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport AccountCircleIcon from \"@material-ui/icons/AccountCircle\";\nimport \"./Header.css\";\nimport { UserContext } from \"../../context/user\";\n\nfunction Header() {\n  const { user } = useContext(UserContext);\n  const [profile, setProfile] = useState(\"\");\n\n  useEffect(() => {\n    if (user != null) {\n      setProfile(user.imageUrl);\n    }\n  }, [user]);\n\n  return (\n    <nav className=\"navbar sticky-top navbar-expand-lg navbar-light\">\n      <Link className=\"navbar-brand\" to=\"/clubs\">\n        Club View\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarTogglerDemo02\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link className=\"nav-link active\" to=\"/clubs\">\n              Clubs\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/clubs/add\">\n              <Fab variant=\"extended\" size=\"large\">\n                <AddIcon />\n                Add Club\n              </Fab>\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link to=\"/profile\">\n              <Fab size=\"medium\">\n                {user != null ? (\n                  <img className=\"profile-picture\" src={profile}></img>\n                ) : (\n                  <AccountCircleIcon />\n                )}\n              </Fab>\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/AddArea/AddArea.jsx",["61","62","63","64","65","66","67","68","69","70"],"import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./AddArea.css\";\n\nfunction AddArea(props) {\n  const isEdit = props.isEdit;\n  const currentURL_string = window.location.href;\n  const id = currentURL_string.substring(\n    currentURL_string.lastIndexOf(\"/\") + 1\n  );\n\n  const [club, setClub] = useState({\n    cname: \"\",\n    lead: \"\",\n    email: \"\",\n    category: \"                        \",\n    desc: \"\",\n    site: \"\",\n    start: \"\",\n    end: \"\",\n    emoji: \"ðŸ’¡\",\n  });\n\n  useEffect(() => {\n    if (props.isEdit === true) {\n      getClubInfo();\n      console.log(club);\n    }\n  }, []);\n\n  function getClubInfo() {\n    axios\n      .get(\"https://clubview-server.herokuapp.com/clubs/\" + id)\n      .then((res) => setClub(res.data))\n      .catch((err) => console.log(err));\n  }\n\n  function handleChange(event) {\n    let { name, value } = event.target;\n    setClub((prevClub) => {\n      console.log(prevClub);\n      return {\n        ...prevClub,\n        [name]: value,\n      };\n    });\n  }\n\n  function stillEmpty() {\n    return (\n      club.cname == \"\" ||\n      club.lead == \"\" ||\n      club.email == \"\" ||\n      club.category == \"                        \" ||\n      club.desc == \"\" ||\n      club.start == \"\" ||\n      club.end == \"\"\n    );\n  }\n\n  function submitClub(event) {\n    if (stillEmpty()) {\n      alert(\"Please fill in all required sections\");\n      event.preventDefault();\n    } else {\n      if (props.isEdit == false) {\n        alert(\"Club Add successful.\");\n        axios\n          .post(\"https://clubview-server.herokuapp.com/clubs/add\", club)\n          .then((res) => console.log(res.data))\n          .catch((err) => console.log(err));\n      } else {\n        alert(\"Club Infomration Updated!!!!! \");\n        axios\n          .post(\n            \"https://clubview-server.herokuapp.com/clubs/update/\" + id,\n            club\n          )\n          .then((res) => console.log(res.data))\n          .catch((err) => console.log(err));\n      }\n    }\n    event.preventDefault();\n  }\n\n  return (\n    <section>\n      <form className=\"needs-validation\" noValidate>\n        <div className=\"row add-Area\">\n          <div className=\"container-fluid-add col-lg-5 col-md-12\">\n            <h4>Choose an emoji!</h4>\n            <p>that best represents your club</p>\n            <div className=\"content\">{club.emoji}</div>\n            <input\n              name=\"emoji\"\n              type=\"text\"\n              className=\"input-styling form-control mx-auto\"\n              onChange={handleChange}\n              value={club.emoji}\n              maxLength=\"3\"\n              required\n            />\n          </div>\n\n          <div className=\"container-fluid-add col-lg-7 col-md-12\">\n            <h4>Club Information</h4>\n\n            <div className=\"form-group row\">\n              <label for=\"cName_\">Club Name*</label>\n              <input\n                name=\"cname\"\n                type=\"text\"\n                className=\"form-control\"\n                id=\"cName_\"\n                onChange={handleChange}\n                value={club.cname}\n                required\n              />\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"cLead\">Club Lead Name(s)*</label>\n              <input\n                name=\"lead\"\n                type=\"text\"\n                className=\"form-control\"\n                id=\"cLead\"\n                onChange={handleChange}\n                value={club.lead}\n                required\n              />\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"email\">Club Lead e-mail*</label>\n              <div className=\"input-group\">\n                <input\n                  name=\"email\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  onChange={handleChange}\n                  aria-describedby=\"emailHelp\"\n                  value={club.email}\n                  required\n                />\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"category\">Club Category*</label>\n              <select\n                name=\"category\"\n                className=\"form-control\"\n                id=\"category\"\n                onChange={handleChange}\n                value={club.category}\n                required\n              >\n                <option> </option>\n                <option>Academic and Educational</option>\n                <option>Community service</option>\n                <option>Media and Publication</option>\n                <option>Political or multicultural</option>\n                <option>Recreation and sports</option>\n                <option>Religious and spiritual</option>\n                <option>Student government</option>\n              </select>\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"clubDesc\">Description of the Club*</label>\n              <textarea\n                className=\"form-control\"\n                name=\"desc\"\n                id=\"clubDesc\"\n                rows=\"3\"\n                onChange={handleChange}\n                value={club.desc}\n                required\n              ></textarea>\n            </div>\n\n            <div className=\"form-group row\">\n              <label for=\"clubSite\">Website/Social Media Link</label>\n              <input\n                name=\"site\"\n                type=\"url\"\n                className=\"form-control\"\n                id=\"clubSite\"\n                onChange={handleChange}\n                value={club.site}\n                required\n              />\n            </div>\n\n            <div className=\"row\">\n              <label for=\"RecruitmentPeriod\">Recruitment Period*</label>\n              <div id=\"RecruitmentPeriod\">\n                <div className=\"row\">\n                  <div className=\"form-group col\">\n                    <div className=\"col-10\">\n                      <input\n                        name=\"start\"\n                        className=\"form-control\"\n                        type=\"datetime-local\"\n                        id=\"startDate\"\n                        onChange={handleChange}\n                        value={club.start}\n                        required\n                      />\n                    </div>\n                  </div>\n                  <div className=\"form-group col\">\n                    <div className=\"col-10\">\n                      <input\n                        name=\"end\"\n                        className=\"form-control\"\n                        type=\"datetime-local\"\n                        placeholder=\"End Date\"\n                        id=\"startDate\"\n                        onChange={handleChange}\n                        value={club.end}\n                        required\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              onClick={submitClub}\n              className=\"btn btn-primary\"\n              style={{ textAlign: \"right\" }}\n            >\n              {props.isEdit ? \"Update\" : \"Submit\"}\n            </button>\n          </div>\n        </div>\n      </form>\n    </section>\n  );\n}\n\nexport default AddArea;\n","/Users/aaronkang/Desktop/Clubview/client/src/components/Club/Club.jsx",["71","72","73"],"import React, {useState } from \"react\";\nimport {Link} from \"react-router-dom\";\nimport $ from \"jquery\";\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport Fab from '@material-ui/core/Fab'\nimport \"./Club.css\"\n\n\n\nfunction Club(props){\n\n  const infoLinkRoute= \"clubs/\" + props.id;\n  const editLinkRoute = \"edit/\" + props.id;\n  const [isFav, setFav] = useState(false);\n\n\n  const statusInd = {\n    height: \"17px\",\n    width: \"17px\",\n    backgroundColor: props.recruit[1],\n    borderRadius: \"50%\",\n    display: \"inline-block\",\n    float:\"left\",\n    zIndex: \"2\"\n  }\n\n  return(\n    <>\n    <div className=\"card mb-4\">\n      <div className=\"edit-icon-container\">\n        <Fab className=\"edit-icon\" onClick= {() => {setFav(!isFav)}} aria-label=\"favorite\" size=\"small\">\n           {isFav ? <FavoriteIcon className=\"edit-icon-heart\" fontSize=\"small\" /> : <FavoriteBorderIcon className=\"edit-icon-heart\" fontSize=\"small\" /> }\n        </Fab>\n      </div>\n      <Link to={infoLinkRoute}>\n        <div class=\"card-img-container\">\n          <img class=\"card-img-top\" src=\"./images/smallLong.png\" alt=\"Card image cap\" />\n          <p class=\"card-text\">{props.emoji}</p>\n        </div>\n      </Link>\n        <div className=\"card-body\">\n        <Link to={infoLinkRoute}>\n            <h4 style={{color:\"black\"}}>{props.cname}</h4>\n          </Link>\n            <span style= {statusInd}></span>\n            <p className=\"card-text\">\n            {props.recruit[0]}\n            </p>\n        </div>\n    </div>\n    </>\n  )\n}\n\nexport default Club;","/Users/aaronkang/Desktop/Clubview/client/src/components/LogInOut/Login.jsx",["74","75"],"/Users/aaronkang/Desktop/Clubview/client/src/components/LogInOut/Logout.jsx",["76","77"],"/Users/aaronkang/Desktop/Clubview/client/src/context/user.jsx",[],"/Users/aaronkang/Desktop/Clubview/client/src/utils/refreshToken.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":52,"column":19,"nodeType":"84","endLine":52,"endColumn":66},{"ruleId":"85","severity":1,"message":"86","line":6,"column":9,"nodeType":"87","messageId":"88","endLine":6,"endColumn":15},{"ruleId":"89","severity":1,"message":"90","line":29,"column":6,"nodeType":"91","endLine":29,"endColumn":8,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":51,"column":18,"nodeType":"95","messageId":"96","endLine":51,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":52,"column":17,"nodeType":"95","messageId":"96","endLine":52,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":53,"column":18,"nodeType":"95","messageId":"96","endLine":53,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":54,"column":21,"nodeType":"95","messageId":"96","endLine":54,"endColumn":23},{"ruleId":"93","severity":1,"message":"94","line":55,"column":17,"nodeType":"95","messageId":"96","endLine":55,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":56,"column":18,"nodeType":"95","messageId":"96","endLine":56,"endColumn":20},{"ruleId":"93","severity":1,"message":"94","line":57,"column":16,"nodeType":"95","messageId":"96","endLine":57,"endColumn":18},{"ruleId":"93","severity":1,"message":"94","line":66,"column":24,"nodeType":"95","messageId":"96","endLine":66,"endColumn":26},{"ruleId":"85","severity":1,"message":"97","line":3,"column":8,"nodeType":"87","messageId":"88","endLine":3,"endColumn":9},{"ruleId":"85","severity":1,"message":"98","line":14,"column":9,"nodeType":"87","messageId":"88","endLine":14,"endColumn":22},{"ruleId":"99","severity":1,"message":"100","line":38,"column":11,"nodeType":"84","endLine":38,"endColumn":89},{"ruleId":"85","severity":1,"message":"101","line":1,"column":40,"nodeType":"87","messageId":"88","endLine":1,"endColumn":48},{"ruleId":"85","severity":1,"message":"102","line":2,"column":8,"nodeType":"87","messageId":"88","endLine":2,"endColumn":13},{"ruleId":"85","severity":1,"message":"103","line":1,"column":29,"nodeType":"87","messageId":"88","endLine":1,"endColumn":38},{"ruleId":"85","severity":1,"message":"101","line":1,"column":40,"nodeType":"87","messageId":"88","endLine":1,"endColumn":48},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'isEdit' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'club', 'getClubInfo', and 'props.isEdit'. Either include them or remove the dependency array.","ArrayExpression",["106"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'$' is defined but never used.","'editLinkRoute' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","'useState' is defined but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [club, getClubInfo, props.isEdit]",{"range":"109","text":"110"},[615,617],"[club, getClubInfo, props.isEdit]"]